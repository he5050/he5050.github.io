(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{441:function(e,a,t){"use strict";t.r(a),function(e){t.d(a,"default",(function(){return j}));var n,c=t(169),o=(t(411),t(0),t(170)),s=["components"];function p(){return(p=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e}).apply(this,arguments)}function b(e,a){if(null==e)return{};var t,n,c=function(e,a){if(null==e)return{};var t,n,c={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||(c[t]=e[t]);return c}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(c[t]=e[t])}return c}(n="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.enterModule:void 0)&&n(e);"undefined"!=typeof reactHotLoaderGlobal&&reactHotLoaderGlobal.default.signature;var m,N,r=function(e){return function(a){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(o.b)("div",a)}},l=r("Footer"),u={};function j(e){var a=e.components,t=b(e,s);return Object(o.b)("wrapper",p({},u,t,{components:a,mdxType:"MDXLayout"}),Object(o.b)("blockquote",null,Object(o.b)(l,{mdxType:"Footer"})),Object(o.b)("h1",{className:"__internal",id:"17-原型链与继承"},"17 原型链与继承",Object(o.b)("a",{parentName:"h1",href:"#17-%E5%8E%9F%E5%9E%8B%E9%93%BE%E4%B8%8E%E7%BB%A7%E6%89%BF","aria-hidden":!0,className:"anchor"},"#")),Object(o.b)("p",null,Object(o.b)("img",{parentName:"p",src:"https://raw.githubusercontent.com/Tnfe/TNFE-Diagram/master/assets/javascript%20prototype%20chain.png",alt:null})),Object(o.b)("p",null,"首先需要了解对象和构造函数的区别。"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul",className:"__internal"},"对象定义为：“无序属性的集合，其属性可以包含基本值，对象和函数”。严格来讲，这就相当于说对象是一组没有特定顺序的值。"),Object(o.b)("li",{parentName:"ul",className:"__internal"},"构造函数可以用来创建特定类型的对象，用来在创建对象时初始化对象。它的特点是，一般为大写字母开头，使用 new 操作符来实例化对象，比如：")),Object(o.b)("h2",{className:"__internal",id:"1原型-prototype、contructor-以及-proto"},"1.原型 prototype、contructor 以及 proto",Object(o.b)("a",{parentName:"h2",href:"#1%E5%8E%9F%E5%9E%8B-prototype%E3%80%81contructor-%E4%BB%A5%E5%8F%8A-proto","aria-hidden":!0,className:"anchor"},"#")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul",className:"__internal"},Object(o.b)("inlineCode",{parentName:"li"},"prototype"),"指向函数的原型对象，这是一个显式原型属性，只有",Object(o.b)("strong",{parentName:"li"},"函数"),"才拥有该属性。",Object(o.b)("inlineCode",{parentName:"li"},"contructor"),"指向原型对象的构造函数,每个对象都有",Object(o.b)("inlineCode",{parentName:"li"},"_proto_"),"，它是隐式原型属性，指向了创建该对象的构造函数原型。"),Object(o.b)("li",{parentName:"ul",className:"__internal"},"每个",Object(o.b)("strong",{parentName:"li"},"对象"),"都有一个",Object(o.b)("inlineCode",{parentName:"li"},"__proto__"),"属性，",Object(o.b)("strong",{parentName:"li"},"并且指向它的",Object(o.b)("inlineCode",{parentName:"strong"},"prototype"),"原型对象"),"。"),Object(o.b)("li",{parentName:"ul",className:"__internal"},"每个",Object(o.b)("strong",{parentName:"li"},"构造函数"),"都有一个",Object(o.b)("inlineCode",{parentName:"li"},"prototype"),"原型对象。"),Object(o.b)("li",{parentName:"ul",className:"__internal"},Object(o.b)("inlineCode",{parentName:"li"},"prototype"),"原型对象里的",Object(o.b)("inlineCode",{parentName:"li"},"constructor"),"指向构造函数本身。"),Object(o.b)("li",{parentName:"ul",className:"__internal"},"实例对象的",Object(o.b)("inlineCode",{parentName:"li"},"__proto__"),"指向构造函数的",Object(o.b)("inlineCode",{parentName:"li"},"prototype"),"，从而实现继承。"),Object(o.b)("li",{parentName:"ul",className:"__internal"},Object(o.b)("inlineCode",{parentName:"li"},"prototype"),"对象相当于特定类型所有实例对象都可以访问的公共容器。"),Object(o.b)("li",{parentName:"ul",className:"__internal"},Object(o.b)("inlineCode",{parentName:"li"},"Object.create(null)")," 新建的对象是没有",Object(o.b)("inlineCode",{parentName:"li"},"__proto__"),"属性的。")),Object(o.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(o.b)("pre",{parentName:"div",className:"language-js"},Object(o.b)("code",{parentName:"pre",className:"language-js"},Object(o.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(o.b)("span",{parentName:"code",className:"token function"},"Foo"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"{"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n",Object(o.b)("span",{parentName:"code",className:"token comment"},"// 它们分别指向谁"),"\nconsole",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"log"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token class-name"},"Foo"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\nconsole",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"log"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token class-name"},"Foo"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"contructor",Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\nconsole",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"log"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),"Foo",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"__proto__",Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\nconsole",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"log"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token class-name"},"Foo"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"__proto__",Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")))),Object(o.b)("p",null,Object(o.b)("img",{parentName:"p",src:"http://tva1.sinaimg.cn/large/69abf49bly1gwp54vzwy5j21000xyq48.jpg",alt:null})),Object(o.b)("p",null,"我们在来看一下",Object(o.b)("strong",{parentName:"p"},"函数和对象之间的关系")),Object(o.b)("p",null,Object(o.b)("img",{parentName:"p",src:"http://tva1.sinaimg.cn/large/69abf49bly1gwp5q0uio0j20qt0idacd.jpg",alt:null})),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"原型对象之间的关系")),Object(o.b)("p",null,"它们的",Object(o.b)("inlineCode",{parentName:"p"},"_proto_"),"都指向了",Object(o.b)("inlineCode",{parentName:"p"},"Object.prototype"),"。js 原型链最终指向的是",Object(o.b)("inlineCode",{parentName:"p"},"Object"),"原型对象,最后到",Object(o.b)("inlineCode",{parentName:"p"},"Null")),Object(o.b)("p",null,Object(o.b)("img",{parentName:"p",src:"http://tva1.sinaimg.cn/large/69abf49bly1gwp5zonhulj20of0hftay.jpg",alt:null})),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("em",{parentName:"strong"},"proto"),"原型链图")),Object(o.b)("p",null,Object(o.b)("img",{parentName:"p",src:"http://tva1.sinaimg.cn/large/69abf49bly1gwp65bhmeuj20pv0nnq64.jpg",alt:null})),Object(o.b)("p",null,"我们把上面的调整合并一下就可以看到完整的原型链了"),Object(o.b)("p",null,Object(o.b)("img",{parentName:"p",src:"http://tva1.sinaimg.cn/large/69abf49bly1gwp6jh5gy7j20qd0lnq8o.jpg",alt:null})),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul",className:"__internal"},"Function 和 Object 是两个函数。"),Object(o.b)("li",{parentName:"ul",className:"__internal"},Object(o.b)("strong",{parentName:"li"},"proto")," 将对象和原型连接起来组成了原型链。"),Object(o.b)("li",{parentName:"ul",className:"__internal"},"所有的函数的 ",Object(o.b)("strong",{parentName:"li"},"proto")," 都指向 Function 原型对象。"),Object(o.b)("li",{parentName:"ul",className:"__internal"},Object(o.b)("strong",{parentName:"li"},"js 的原型链最终指向的是 Object 原型对象(Object.prototype)"),"（在这里我将 null 排除在外了）。")),Object(o.b)("p",null,"那下面的结果应该为"),Object(o.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(o.b)("pre",{parentName:"div",className:"language-js"},Object(o.b)("code",{parentName:"pre",className:"language-js"},Object(o.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"__proto__ ",Object(o.b)("span",{parentName:"code",className:"token operator"},"===")," ",Object(o.b)("span",{parentName:"code",className:"token operator"},"?"),"\n",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"__proto__",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"__proto__ ",Object(o.b)("span",{parentName:"code",className:"token operator"},"===")," ",Object(o.b)("span",{parentName:"code",className:"token operator"},"?"),"\n",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"__proto__",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"__proto__",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"__proto__ ",Object(o.b)("span",{parentName:"code",className:"token operator"},"===")," ",Object(o.b)("span",{parentName:"code",className:"token operator"},"?"),"\n\nObject",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"__proto ",Object(o.b)("span",{parentName:"code",className:"token operator"},"===")," ",Object(o.b)("span",{parentName:"code",className:"token operator"},"?"),Object(o.b)("span",{parentName:"code",className:"token operator"},"|"),Object(o.b)("span",{parentName:"code",className:"token class-name"},"Objet"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype ",Object(o.b)("span",{parentName:"code",className:"token comment"},"// true or false?"),"\nFunction",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"__proto__ ",Object(o.b)("span",{parentName:"code",className:"token operator"},"===")," ",Object(o.b)("span",{parentName:"code",className:"token operator"},"?"),"\n",Object(o.b)("span",{parentName:"code",className:"token class-name"},"Function"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"__proto__ ",Object(o.b)("span",{parentName:"code",className:"token operator"},"===")," ",Object(o.b)("span",{parentName:"code",className:"token operator"},"?"),"\n\n",Object(o.b)("span",{parentName:"code",className:"token class-name"},"Foo"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"__proto__ ",Object(o.b)("span",{parentName:"code",className:"token operator"},"===")," ",Object(o.b)("span",{parentName:"code",className:"token class-name"},"Object"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype\n",Object(o.b)("span",{parentName:"code",className:"token class-name"},"Function"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"__proto__ ",Object(o.b)("span",{parentName:"code",className:"token operator"},"===")," ",Object(o.b)("span",{parentName:"code",className:"token class-name"},"Object"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype\n\n",Object(o.b)("span",{parentName:"code",className:"token class-name"},"Foo"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"__proto__ ",Object(o.b)("span",{parentName:"code",className:"token operator"},"===")," ",Object(o.b)("span",{parentName:"code",className:"token class-name"},"Function"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"__proto__\n"))),Object(o.b)("p",null,"请看下面的代码示例"),Object(o.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(o.b)("pre",{parentName:"div",className:"language-js"},Object(o.b)("code",{parentName:"pre",className:"language-js"},Object(o.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(o.b)("span",{parentName:"code",className:"token function"},"Person"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token parameter"},"name",Object(o.b)("span",{parentName:"span",className:"token punctuation"},",")," age"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"this"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"name ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," name",Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"this"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"age ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," age",Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n",Object(o.b)("span",{parentName:"code",className:"token class-name"},"Person"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function-variable function"},"sayName")," ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    console",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"log"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token keyword"},"this"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"name",Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"}"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n",Object(o.b)("span",{parentName:"code",className:"token keyword"},"let")," p1 ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(o.b)("span",{parentName:"code",className:"token class-name"},"Person"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token string"},'"Jack"'),Object(o.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(o.b)("span",{parentName:"code",className:"token number"},"20"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(o.b)("span",{parentName:"code",className:"token keyword"},"let")," p2 ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(o.b)("span",{parentName:"code",className:"token class-name"},"Person"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token string"},'"Rose"'),Object(o.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(o.b)("span",{parentName:"code",className:"token number"},"25"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n\np1",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"sayName"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"// Jack"),"\np2",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"sayName"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"// Rose"),"\n\np1",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"__proto__ ",Object(o.b)("span",{parentName:"code",className:"token operator"},"===")," ",Object(o.b)("span",{parentName:"code",className:"token class-name"},"Person"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"//true"),"\np2",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"__proto__ ",Object(o.b)("span",{parentName:"code",className:"token operator"},"===")," ",Object(o.b)("span",{parentName:"code",className:"token class-name"},"Person"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"//true"),"\np1",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"__proto__ ",Object(o.b)("span",{parentName:"code",className:"token operator"},"===")," p2",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"__proto__",Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"//true"),"\n",Object(o.b)("span",{parentName:"code",className:"token class-name"},"Person"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"constructor ",Object(o.b)("span",{parentName:"code",className:"token operator"},"===")," Person",Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"//true"),"\n",Object(o.b)("span",{parentName:"code",className:"token comment"},"// 原型链的终点"),"\n",Object(o.b)("span",{parentName:"code",className:"token class-name"},"Object"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"__proto__ ",Object(o.b)("span",{parentName:"code",className:"token operator"},"===")," ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"null"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")))),Object(o.b)("p",null,Object(o.b)("img",{parentName:"p",src:"http://tva1.sinaimg.cn/large/69abf49bly1gwp4brezj9j20iq0ddwh3.jpg",alt:null})),Object(o.b)("h2",{className:"__internal",id:"2原型链"},"2.原型链",Object(o.b)("a",{parentName:"h2",href:"#2%E5%8E%9F%E5%9E%8B%E9%93%BE","aria-hidden":!0,className:"anchor"},"#")),Object(o.b)("p",null,"先看下面的代码"),Object(o.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(o.b)("pre",{parentName:"div",className:"language-js"},Object(o.b)("code",{parentName:"pre",className:"language-js"},Object(o.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(o.b)("span",{parentName:"code",className:"token function"},"Person"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"{"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n",Object(o.b)("span",{parentName:"code",className:"token keyword"},"let")," person ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(o.b)("span",{parentName:"code",className:"token class-name"},"Person"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\nperson",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"name ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token string"},'"amy"'),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\nconsole",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"log"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),"person",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"name",Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"// amy")))),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Person")," 就是构造函数，",Object(o.b)("strong",{parentName:"p"},"person")," 就是对象。"),Object(o.b)("p",null,"对于对象而言，每个 JS 对象一定对应一个原型对象，并从原型对象继承属性和方法。对象",Object(o.b)("inlineCode",{parentName:"p"},"__proto__"),"属性的值就是它所对应的原型对象。对象的",Object(o.b)("inlineCode",{parentName:"p"},"__proto__"),"指向自己构造函数的 ",Object(o.b)("inlineCode",{parentName:"p"},"prototype"),"。所以对象的原型链就是",Object(o.b)("inlineCode",{parentName:"p"},"obj.__proto__.proto__...."),"。"),Object(o.b)("p",null,"对于函数而言，只有函数才有 ",Object(o.b)("inlineCode",{parentName:"p"},"prototype")," 属性，",Object(o.b)("inlineCode",{parentName:"p"},"Person.prototype")," 是一个对象，并且有两个属性， 一个是 ",Object(o.b)("inlineCode",{parentName:"p"},"constructor")," 指向其构造函数 ",Object(o.b)("inlineCode",{parentName:"p"},"Person"),"， 一个是 ",Object(o.b)("inlineCode",{parentName:"p"},"__proto__")," 属性：是一个对象，指向上一层的原型。"),Object(o.b)("p",null,"原型链的尽头是",Object(o.b)("inlineCode",{parentName:"p"},"Object.prototype"),"。所有对象均从",Object(o.b)("inlineCode",{parentName:"p"},"Object.prototype"),"继承属性。"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"Function.prototype"),"和",Object(o.b)("inlineCode",{parentName:"p"},"Function.__proto__"),"为同一对象。Object/Array/String 等等构造函数本质上和 ",Object(o.b)("inlineCode",{parentName:"p"},"Function")," 一样，均继承于",Object(o.b)("inlineCode",{parentName:"p"},"Function.prototype"),"。"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"Function.prototype"),"直接继承",Object(o.b)("inlineCode",{parentName:"p"},"Object.prototype"),"。"),Object(o.b)("p",null,"这里的 ",Object(o.b)("inlineCode",{parentName:"p"},"Object")," 和 ",Object(o.b)("inlineCode",{parentName:"p"},"Function")," 有点鸡和蛋的问题，总结：先有",Object(o.b)("inlineCode",{parentName:"p"},"Object.prototype"),"（原型链顶端），",Object(o.b)("inlineCode",{parentName:"p"},"Function.prototype"),"继承",Object(o.b)("inlineCode",{parentName:"p"},"Object.prototype"),"而产生，最后，",Object(o.b)("inlineCode",{parentName:"p"},"Function")," 和 ",Object(o.b)("inlineCode",{parentName:"p"},"Object")," 和其它构造函数继承",Object(o.b)("inlineCode",{parentName:"p"},"Function.prototype"),"而产生。"),Object(o.b)("p",null,"属性查找时，先在对象自己上找，找不到才会一步步根据原型链往上找。",Object(o.b)("strong",{parentName:"p"},"所有的对象会一层层往上找原型，最终点是 Object，而 Object 的上一层原型就是 null 了"),"。"),Object(o.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(o.b)("pre",{parentName:"div",className:"language-js"},Object(o.b)("code",{parentName:"pre",className:"language-js"},Object(o.b)("span",{parentName:"code",className:"token keyword"},"let")," arr ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(o.b)("span",{parentName:"code",className:"token number"},"0"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(o.b)("span",{parentName:"code",className:"token number"},"0"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\narr",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"valueOf"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"// [0,0]"),"\nconsole",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"dir"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),"arr",Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")))),Object(o.b)("p",null,Object(o.b)("img",{parentName:"p",src:"http://tva1.sinaimg.cn/large/69abf49bly1gwp4hewugnj20hr0r3wnw.jpg",alt:null})),Object(o.b)("p",null,"按照前面所说的。如果自身没有该方法，我们应该去",Object(o.b)("inlineCode",{parentName:"p"},"Array.prototype"),"对象里去找，但是你会发现",Object(o.b)("inlineCode",{parentName:"p"},"arr.__proto__"),"上压根就没有",Object(o.b)("inlineCode",{parentName:"p"},"valueOf"),"方法，然后又通过",Object(o.b)("inlineCode",{parentName:"p"},"arr.__proto__.__proto__"),"找到 Object 上面。当然不会一直找下去，原型链是有终点的，最后查找到",Object(o.b)("inlineCode",{parentName:"p"},"Object.prototype"),"时\n",Object(o.b)("inlineCode",{parentName:"p"},"Object.prototype.__proto__ === null"),"，意味着查找结束。"),Object(o.b)("p",null,"上面的原型链的查找过程如下:\n",Object(o.b)("inlineCode",{parentName:"p"},"arr ---\x3e Array.prototype ---\x3e Object.prototype ---\x3e null"),"\n",Object(o.b)("strong",{parentName:"p"},"这就是原型链，层层向上查找，最后还没有就返回 undefined。")),Object(o.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(o.b)("pre",{parentName:"div",className:"language-js"},Object(o.b)("code",{parentName:"pre",className:"language-js"},Object(o.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(o.b)("span",{parentName:"code",className:"token function"},"Person"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"this"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"age ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token number"},"15"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n",Object(o.b)("span",{parentName:"code",className:"token class-name"},"Person"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"age ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token number"},"20"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(o.b)("span",{parentName:"code",className:"token keyword"},"let")," person ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(o.b)("span",{parentName:"code",className:"token class-name"},"Person"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(o.b)("span",{parentName:"code",className:"token keyword"},"class")," ",Object(o.b)("span",{parentName:"code",className:"token class-name"},"Child")," ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"extends")," ",Object(o.b)("span",{parentName:"code",className:"token class-name"},"Person")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"{"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n",Object(o.b)("span",{parentName:"code",className:"token keyword"},"let")," person2 ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(o.b)("span",{parentName:"code",className:"token class-name"},"Child"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n\nconsole",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"log"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),"person",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"age",Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"//15"),"\nconsole",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"log"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token class-name"},"Person"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"__proto__ ",Object(o.b)("span",{parentName:"code",className:"token operator"},"==")," ",Object(o.b)("span",{parentName:"code",className:"token class-name"},"Object"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"//true"),"\nconsole",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"log"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token class-name"},"Person"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype ",Object(o.b)("span",{parentName:"code",className:"token operator"},"==")," ",Object(o.b)("span",{parentName:"code",className:"token class-name"},"Object"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"//false"),"\nconsole",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"log"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),"Person",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"__proto__ ",Object(o.b)("span",{parentName:"code",className:"token operator"},"==")," ",Object(o.b)("span",{parentName:"code",className:"token class-name"},"Function"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"//true"),"\nconsole",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"log"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),"person",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"__proto__ ",Object(o.b)("span",{parentName:"code",className:"token operator"},"==")," ",Object(o.b)("span",{parentName:"code",className:"token class-name"},"Person"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"//true"),"\nconsole",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"log"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token class-name"},"Person"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"constructor ",Object(o.b)("span",{parentName:"code",className:"token operator"},"==")," Person",Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"//true"),"\nconsole",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"log"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),"Object",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"getPrototypeOf"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),"person",Object(o.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(o.b)("span",{parentName:"code",className:"token operator"},"===")," ",Object(o.b)("span",{parentName:"code",className:"token class-name"},"Person"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"//true"),"\nconsole",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"log"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token class-name"},"Object"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"__proto__",Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"//null"),"\nconsole",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"log"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),"Object",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"__proto__ ",Object(o.b)("span",{parentName:"code",className:"token operator"},"==")," ",Object(o.b)("span",{parentName:"code",className:"token class-name"},"Function"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"//true"),"\nconsole",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"log"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token class-name"},"Function"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"__proto__ ",Object(o.b)("span",{parentName:"code",className:"token operator"},"==")," ",Object(o.b)("span",{parentName:"code",className:"token class-name"},"Object"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"//true"),"\nconsole",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"log"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token class-name"},"Function"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype ",Object(o.b)("span",{parentName:"code",className:"token operator"},"==")," Function",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"__proto__",Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"//true"),"\n\nconsole",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"log"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token class-name"},"Child"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"__proto__ ",Object(o.b)("span",{parentName:"code",className:"token operator"},"==")," ",Object(o.b)("span",{parentName:"code",className:"token class-name"},"Person"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"//true"),"\nconsole",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"log"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token class-name"},"Child"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"__proto__ ",Object(o.b)("span",{parentName:"code",className:"token operator"},"==")," ",Object(o.b)("span",{parentName:"code",className:"token class-name"},"Object"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"//false"),"\nconsole",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"log"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),"Child",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"__proto__ ",Object(o.b)("span",{parentName:"code",className:"token operator"},"==")," Person",Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"//true"),"\nconsole",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"log"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),"person2",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"__proto__ ",Object(o.b)("span",{parentName:"code",className:"token operator"},"==")," ",Object(o.b)("span",{parentName:"code",className:"token class-name"},"Child"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"//true"),"\nconsole",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"log"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),"person2",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"__proto__",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"__proto__ ",Object(o.b)("span",{parentName:"code",className:"token operator"},"==")," ",Object(o.b)("span",{parentName:"code",className:"token class-name"},"Person"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"//true")))),Object(o.b)("h2",{className:"__internal",id:"3继承"},"3.继承",Object(o.b)("a",{parentName:"h2",href:"#3%E7%BB%A7%E6%89%BF","aria-hidden":!0,className:"anchor"},"#")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"继承是一个类从另外一类或多个类中获取方法和属性的过程。复制父类的属性和方法来重写子类原型对象。")),Object(o.b)("h3",{className:"__internal",id:"31-原型链继承new-方法"},"3.1 原型链继承(New 方法)",Object(o.b)("a",{parentName:"h3",href:"#31-%E5%8E%9F%E5%9E%8B%E9%93%BE%E7%BB%A7%E6%89%BFnew-%E6%96%B9%E6%B3%95","aria-hidden":!0,className:"anchor"},"#")),Object(o.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(o.b)("pre",{parentName:"div",className:"language-js"},Object(o.b)("code",{parentName:"pre",className:"language-js"},Object(o.b)("span",{parentName:"code",className:"token comment"},"// 父类"),"\n",Object(o.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(o.b)("span",{parentName:"code",className:"token function"},"fatherFn"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"this"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"fatherName ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token string"},'"父类的this属性"'),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\nfatherFn",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"fatherFnSayName ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token string"},'"父类原型对象的属性或者方法"'),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n",Object(o.b)("span",{parentName:"code",className:"token comment"},"// 子类"),"\n",Object(o.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(o.b)("span",{parentName:"code",className:"token function"},"sonFn"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"this"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"sonName ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token string"},'"子类的this属性"'),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n",Object(o.b)("span",{parentName:"code",className:"token comment"},"// 核心步骤：重写子类的原型对象"),"\nsonFn",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(o.b)("span",{parentName:"code",className:"token class-name"},"fatherFn"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"// 将fatherFn的实例赋值给sonFn的prototype"),"\nsonFn",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"sonFnSayName ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token string"},'"子类原型对象的属性或者方法"'),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"// 子类的属性/方法声明在后面,避免被覆盖"),"\n",Object(o.b)("span",{parentName:"code",className:"token comment"},"// 实例化子类"),"\n",Object(o.b)("span",{parentName:"code",className:"token keyword"},"const")," sonFnInstance ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(o.b)("span",{parentName:"code",className:"token class-name"},"sonFn"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\nconsole",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"log"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token string"},'"子类的实例："'),Object(o.b)("span",{parentName:"code",className:"token punctuation"},",")," sonFnInstance",Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")))),Object(o.b)("p",null,Object(o.b)("img",{parentName:"p",src:"http://tva1.sinaimg.cn/large/69abf49bly1gwq06fp20vj20ib09bdjh.jpg",alt:null})),Object(o.b)("h4",{className:"__internal",id:"311-原型链继承获取父类的属性和方法"},"3.1.1 原型链继承获取父类的属性和方法",Object(o.b)("a",{parentName:"h4",href:"#311-%E5%8E%9F%E5%9E%8B%E9%93%BE%E7%BB%A7%E6%89%BF%E8%8E%B7%E5%8F%96%E7%88%B6%E7%B1%BB%E7%9A%84%E5%B1%9E%E6%80%A7%E5%92%8C%E6%96%B9%E6%B3%95","aria-hidden":!0,className:"anchor"},"#")),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol",className:"__internal"},Object(o.b)("inlineCode",{parentName:"li"},"fatherFn"),"通过 this 声明的属性/方法都会绑定在",Object(o.b)("inlineCode",{parentName:"li"},"new"),"期间创建的新对象上。"),Object(o.b)("li",{parentName:"ol",className:"__internal"},"新对象的原型是",Object(o.b)("inlineCode",{parentName:"li"},"father.prototype"),",通过原型链的属性查找到",Object(o.b)("inlineCode",{parentName:"li"},"father.prototype"),"的属性和方法。")),Object(o.b)("h4",{className:"__internal",id:"311-理解new做了什么："},"3.1.1 理解",Object(o.b)("inlineCode",{parentName:"h4"},"new"),"做了什么：",Object(o.b)("a",{parentName:"h4",href:"#311-%E7%90%86%E8%A7%A3new%E5%81%9A%E4%BA%86%E4%BB%80%E4%B9%88%EF%BC%9A","aria-hidden":!0,className:"anchor"},"#")),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol",className:"__internal"},"创建一个全新的对象。"),Object(o.b)("li",{parentName:"ol",className:"__internal"},"这个新对象的原型(",Object(o.b)("inlineCode",{parentName:"li"},"__proto__"),")指向函数的",Object(o.b)("inlineCode",{parentName:"li"},"prototype"),"对象。"),Object(o.b)("li",{parentName:"ol",className:"__internal"},"执行函数，函数的 this 会绑定在新创建的对象上。"),Object(o.b)("li",{parentName:"ol",className:"__internal"},"如果函数没有返回其他对象(包括数组、函数、日期对象等)，那么会自动返回这个新对象。"),Object(o.b)("li",{parentName:"ol",className:"__internal"},"返回的那个对象为构造函数的实例。")),Object(o.b)("h4",{className:"__internal",id:"312-构造调用函数返回其他对象"},"3.1.2 构造调用函数返回其他对象",Object(o.b)("a",{parentName:"h4",href:"#312-%E6%9E%84%E9%80%A0%E8%B0%83%E7%94%A8%E5%87%BD%E6%95%B0%E8%BF%94%E5%9B%9E%E5%85%B6%E4%BB%96%E5%AF%B9%E8%B1%A1","aria-hidden":!0,className:"anchor"},"#")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},Object(o.b)("strong",{parentName:"p"},"返回其他对象会导致获取不到构造函数的实例，很容易因此引起意外的问题"),"！")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"我们知道了",Object(o.b)("inlineCode",{parentName:"strong"},"fatherFn"),"的",Object(o.b)("inlineCode",{parentName:"strong"},"this"),"和",Object(o.b)("inlineCode",{parentName:"strong"},"prototype"),"的属性/方法都跟",Object(o.b)("inlineCode",{parentName:"strong"},"new"),"期间创建的新对象有关系"),"。"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"如果在父类中返回了其他对象(",Object(o.b)("inlineCode",{parentName:"strong"},"new"),"的第四点)，其他对象没有父类的",Object(o.b)("inlineCode",{parentName:"strong"},"this"),"和",Object(o.b)("inlineCode",{parentName:"strong"},"prototype"),"，因此导致原型链继承失败"),"。"),Object(o.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(o.b)("pre",{parentName:"div",className:"language-js"},Object(o.b)("code",{parentName:"pre",className:"language-js"},Object(o.b)("span",{parentName:"code",className:"token comment"},"// 父类"),"\n",Object(o.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(o.b)("span",{parentName:"code",className:"token function"},"fatherFn"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"this"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"fatherName ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token string"},'"父类的this属性"'),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"return")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(o.b)("span",{parentName:"code",className:"token string"},'"我这里返回一个数组"'),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"// ? 这里return this会是怎么样的"),"\n",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\nfatherFn",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"fatherFnSayName ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token string"},'"父类原型对象的属性或者方法"'),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n",Object(o.b)("span",{parentName:"code",className:"token comment"},"// 子类"),"\n",Object(o.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(o.b)("span",{parentName:"code",className:"token function"},"sonFn"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"this"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"sonName ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token string"},'"子类的this属性"'),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n",Object(o.b)("span",{parentName:"code",className:"token comment"},"// 核心步骤：重写子类的原型对象"),"\nsonFn",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(o.b)("span",{parentName:"code",className:"token class-name"},"fatherFn"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"// 将fatherFn的实例赋值给sonFn的prototype"),"\nsonFn",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"sonFnSayName ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token string"},'"子类原型对象的属性或者方法"'),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"// 子类的属性/方法声明在后面,避免被覆盖"),"\n",Object(o.b)("span",{parentName:"code",className:"token comment"},"// 实例化子类"),"\n",Object(o.b)("span",{parentName:"code",className:"token keyword"},"const")," sonFnInstance ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(o.b)("span",{parentName:"code",className:"token class-name"},"sonFn"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\nconsole",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"log"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token string"},'"子类的实例："'),Object(o.b)("span",{parentName:"code",className:"token punctuation"},",")," sonFnInstance",Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")))),Object(o.b)("p",null,"通过我们下面打印出来的结果你会发现,我们的继承是失败了的。\n在我们的构造方法里面会隐性的",Object(o.b)("inlineCode",{parentName:"p"},"return this"),";"),Object(o.b)("p",null,Object(o.b)("img",{parentName:"p",src:"http://ww1.sinaimg.cn/large/69abf49bly1gwq0bh9o7cj20b1042wfp.jpg",alt:null})),Object(o.b)("p",null,"思考一下，我们过来直接的原型链继承会有什么问题呢？"),Object(o.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(o.b)("pre",{parentName:"div",className:"language-js"},Object(o.b)("code",{parentName:"pre",className:"language-js"},Object(o.b)("span",{parentName:"code",className:"token comment"},"// 例一"),"\nsonFn",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(o.b)("span",{parentName:"code",className:"token class-name"},"fatherFn"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(o.b)("span",{parentName:"code",className:"token comment"},"// 子类的prototype被清空后 重新赋值, 导致上一行代码失效,每一次的prototype都会重写上一次的挂载的对象"),"\nsonFn",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    sonFnSayName",Object(o.b)("span",{parentName:"code",className:"token operator"},":")," ",Object(o.b)("span",{parentName:"code",className:"token string"},'"子类原型对象的属性"'),Object(o.b)("span",{parentName:"code",className:"token punctuation"},","),"\n    ",Object(o.b)("span",{parentName:"code",className:"token function-variable function"},"read"),Object(o.b)("span",{parentName:"code",className:"token operator"},":")," ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"{"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"}"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},","),"\n    ",Object(o.b)("span",{parentName:"code",className:"token function-variable function"},"right"),Object(o.b)("span",{parentName:"code",className:"token operator"},":")," ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"{"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"}"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},","),"\n    ",Object(o.b)("span",{parentName:"code",className:"token function-variable function"},"left"),Object(o.b)("span",{parentName:"code",className:"token operator"},":")," ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"{"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"}"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n",Object(o.b)("span",{parentName:"code",className:"token comment"},"// 例二"),"\n",Object(o.b)("span",{parentName:"code",className:"token comment"},"// 这里 你会直接发现会把我们的contructor丢弃了"),"\n",Object(o.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(o.b)("span",{parentName:"code",className:"token function"},"test"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"{"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\ntest",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(o.b)("span",{parentName:"code",className:"token function-variable function"},"read"),Object(o.b)("span",{parentName:"code",className:"token operator"},":")," ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"{"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"}"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n",Object(o.b)("span",{parentName:"code",className:"token comment"},"// 例三"),"\n",Object(o.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(o.b)("span",{parentName:"code",className:"token function"},"Animal"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"{"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n",Object(o.b)("span",{parentName:"code",className:"token class-name"},"Animal"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"names ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(o.b)("span",{parentName:"code",className:"token string"},'"A"'),Object(o.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(o.b)("span",{parentName:"code",className:"token string"},'"B"'),Object(o.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(o.b)("span",{parentName:"code",className:"token string"},'"C"'),Object(o.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(o.b)("span",{parentName:"code",className:"token string"},'"C"'),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(o.b)("span",{parentName:"code",className:"token class-name"},"Animal"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function-variable function"},"say")," ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token parameter"},"index"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    console",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"log"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token template-string"},Object(o.b)("span",{parentName:"span",className:"token template-punctuation string"},"`"),Object(o.b)("span",{parentName:"span",className:"token string"},"I am "),Object(o.b)("span",{parentName:"span",className:"token interpolation"},Object(o.b)("span",{parentName:"span",className:"token interpolation-punctuation punctuation"},"${"),Object(o.b)("span",{parentName:"span",className:"token keyword"},"this"),Object(o.b)("span",{parentName:"span",className:"token punctuation"},"."),"names",Object(o.b)("span",{parentName:"span",className:"token punctuation"},"["),"index",Object(o.b)("span",{parentName:"span",className:"token punctuation"},"]"),Object(o.b)("span",{parentName:"span",className:"token interpolation-punctuation punctuation"},"}")),Object(o.b)("span",{parentName:"span",className:"token template-punctuation string"},"`")),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"}"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n",Object(o.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(o.b)("span",{parentName:"code",className:"token function"},"Cat"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"this"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"age ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token number"},"8"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n",Object(o.b)("span",{parentName:"code",className:"token comment"},"// 从Animal中继承"),"\n",Object(o.b)("span",{parentName:"code",className:"token class-name"},"Cat"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(o.b)("span",{parentName:"code",className:"token class-name"},"Animal"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"// 因为在这里实现直接实现了继承了"),"\n\n",Object(o.b)("span",{parentName:"code",className:"token keyword"},"let")," kitten ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(o.b)("span",{parentName:"code",className:"token class-name"},"Cat"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\nkitten",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"say"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token number"},"2"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"//> I am C"),"\n\n",Object(o.b)("span",{parentName:"code",className:"token keyword"},"let")," oldCat ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(o.b)("span",{parentName:"code",className:"token class-name"},"Cat"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(o.b)("span",{parentName:"code",className:"token comment"},"// 1. 一个是引用值在实例之间互用 这里原型链继承的两个问题之一，"),"\n",Object(o.b)("span",{parentName:"code",className:"token comment"},'// 2. 还有一个问题是在创建实例的时候，不能传参给父类构造器 oldCat = new Cat("XXXX")'),"\nkitten",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"names",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"push"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token string"},'"E"'),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\noldCat",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"say"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token number"},"4"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"//> I am E")))),Object(o.b)("h3",{className:"__internal",id:"32-借用构造函数继承callapply"},"3.2 借用构造函数继承(call/apply)",Object(o.b)("a",{parentName:"h3",href:"#32-%E5%80%9F%E7%94%A8%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E7%BB%A7%E6%89%BFcallapply","aria-hidden":!0,className:"anchor"},"#")),Object(o.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(o.b)("pre",{parentName:"div",className:"language-js"},Object(o.b)("code",{parentName:"pre",className:"language-js"},Object(o.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(o.b)("span",{parentName:"code",className:"token function"},"fatherFn"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token parameter"},Object(o.b)("span",{parentName:"span",className:"token operator"},"..."),"arr"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"this"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"name ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token string"},'"父类的this属性"'),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"this"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"params ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," arr",Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"// 父类的参数 如可用apply的需要用做数组处理"),"\n",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\nfatherFn",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"fatherFnName ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token string"},'"父类原型对象的属性或者方法"'),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(o.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(o.b)("span",{parentName:"code",className:"token function"},"sonFn"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token parameter"},"fatherParams",Object(o.b)("span",{parentName:"span",className:"token punctuation"},",")," ",Object(o.b)("span",{parentName:"span",className:"token operator"},"..."),"sonParams"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(o.b)("span",{parentName:"code",className:"token function"},"fatherFn"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"call"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token keyword"},"this"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(o.b)("span",{parentName:"code",className:"token operator"},"..."),"fatherParams",Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"// 核心步骤: 将fatherFn的this指向sonFn的this对象上"),"\n    ",Object(o.b)("span",{parentName:"code",className:"token comment"},"// fatherFn.apply(this, fatherParams); // fatherParams 类数组"),"\n    ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"this"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"sonName ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token string"},'"子类的this属性"'),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"this"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"sonParams ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," sonParams",Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"// 子类的参数"),"\n",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\nsonFn",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"sonFnName ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token string"},'"子类原型对象的属性或者方法"'),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(o.b)("span",{parentName:"code",className:"token keyword"},"let")," fatherParamsArr ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(o.b)("span",{parentName:"code",className:"token string"},'"父类的参数1"'),Object(o.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(o.b)("span",{parentName:"code",className:"token string"},'"父类的参数2"'),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(o.b)("span",{parentName:"code",className:"token keyword"},"let")," sonParamsArr ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(o.b)("span",{parentName:"code",className:"token string"},'"子类的参数1"'),Object(o.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(o.b)("span",{parentName:"code",className:"token string"},'"子类的参数2"'),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(o.b)("span",{parentName:"code",className:"token keyword"},"const")," sonFnInstance ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(o.b)("span",{parentName:"code",className:"token class-name"},"sonFn"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),"fatherParamsArr",Object(o.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(o.b)("span",{parentName:"code",className:"token operator"},"..."),"sonParamsArr",Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"// 实例化子类"),"\nconsole",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"log"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token string"},'"借用构造函数子类实例"'),Object(o.b)("span",{parentName:"code",className:"token punctuation"},",")," sonFnInstance",Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")))),Object(o.b)("p",null,Object(o.b)("img",{parentName:"p",src:"http://tva1.sinaimg.cn/large/69abf49bly1gwq28mw6uvj20jd0badjh.jpg",alt:null})),Object(o.b)("h4",{className:"__internal",id:"321-借用构造函数继承做了什么？"},"3.2.1 借用构造函数继承做了什么？",Object(o.b)("a",{parentName:"h4",href:"#321-%E5%80%9F%E7%94%A8%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E7%BB%A7%E6%89%BF%E5%81%9A%E4%BA%86%E4%BB%80%E4%B9%88%EF%BC%9F","aria-hidden":!0,className:"anchor"},"#")),Object(o.b)("p",null,"声明类，组织参数等，只是辅助的上下文代码，核心是借用构造函数使用",Object(o.b)("inlineCode",{parentName:"p"},"call、apply"),"做了什么："),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"一经调用",Object(o.b)("inlineCode",{parentName:"strong"},"call/apply"),"它们就会立即执行函数，并在函数执行时改变函数的",Object(o.b)("inlineCode",{parentName:"strong"},"this"),"指向")),Object(o.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(o.b)("pre",{parentName:"div",className:"language-js"},Object(o.b)("code",{parentName:"pre",className:"language-js"},Object(o.b)("span",{parentName:"code",className:"token function"},"fatherFn"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"call"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token keyword"},"this"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(o.b)("span",{parentName:"code",className:"token operator"},"..."),"fatherParams",Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(o.b)("span",{parentName:"code",className:"token function"},"fatherFn"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"apply"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token keyword"},"this"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"["),"fatherParams",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")))),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol",className:"__internal"},"在子类中使用",Object(o.b)("inlineCode",{parentName:"li"},"call"),"调用父类，",Object(o.b)("inlineCode",{parentName:"li"},"fatherFn"),"将会被立即执行，并且将",Object(o.b)("inlineCode",{parentName:"li"},"fatherFn"),"函数的 this 指向",Object(o.b)("inlineCode",{parentName:"li"},"sonFn"),"的",Object(o.b)("inlineCode",{parentName:"li"},"this"),"。"),Object(o.b)("li",{parentName:"ol",className:"__internal"},"因为函数执行了，所以",Object(o.b)("inlineCode",{parentName:"li"},"fatherFn"),"使用 this 声明的函数都会被",Object(o.b)("strong",{parentName:"li"},"声明到",Object(o.b)("inlineCode",{parentName:"strong"},"sonFn"),"的",Object(o.b)("inlineCode",{parentName:"strong"},"this"),"对象"),"下。"),Object(o.b)("li",{parentName:"ol",className:"__internal"},"实例化子类，this 将指向",Object(o.b)("inlineCode",{parentName:"li"},"new"),"期间创建的新对象，返回该新对象。"),Object(o.b)("li",{parentName:"ol",className:"__internal"},"对",Object(o.b)("inlineCode",{parentName:"li"},"fatherFn.prototype"),"没有任何操作，无法继承。")),Object(o.b)("p",null,"该对象的属性为：子类和父类声明的",Object(o.b)("inlineCode",{parentName:"p"},"this"),"属性/方法，它的原型是"),Object(o.b)("h4",{className:"__internal",id:"322-借用构造函数继承的优缺点"},"3.2.2 借用构造函数继承的优缺点",Object(o.b)("a",{parentName:"h4",href:"#322-%E5%80%9F%E7%94%A8%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E7%BB%A7%E6%89%BF%E7%9A%84%E4%BC%98%E7%BC%BA%E7%82%B9","aria-hidden":!0,className:"anchor"},"#")),Object(o.b)("p",null,"优点："),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol",className:"__internal"},"可以向父类传递参数"),Object(o.b)("li",{parentName:"ol",className:"__internal"},"解决了原型链继承中：父类属性使用",Object(o.b)("inlineCode",{parentName:"li"},"this"),"声明的属性会在所有实例共享的问题。")),Object(o.b)("p",null,"缺点："),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol",className:"__internal"},"只能继承父类通过",Object(o.b)("inlineCode",{parentName:"li"},"this"),"声明的属性/方法，不能继承父类",Object(o.b)("inlineCode",{parentName:"li"},"prototype"),"上的属性/方法。"),Object(o.b)("li",{parentName:"ol",className:"__internal"},"父类方法无法复用：因为无法继承父类的",Object(o.b)("inlineCode",{parentName:"li"},"prototype"),"，所以每次子类实例化都要执行父类函数，重新声明父类",Object(o.b)("inlineCode",{parentName:"li"},"this"),"里所定义的方法，因此方法无法复用。")),Object(o.b)("h3",{className:"__internal",id:"33-原型式继承objectcreate"},"3.3 原型式继承(Object.create)",Object(o.b)("a",{parentName:"h3",href:"#33-%E5%8E%9F%E5%9E%8B%E5%BC%8F%E7%BB%A7%E6%89%BFobjectcreate","aria-hidden":!0,className:"anchor"},"#")),Object(o.b)("h4",{className:"__internal",id:"331-继承对象原型objectcreate实现"},"3.3.1 继承对象原型(Object.create)实现",Object(o.b)("a",{parentName:"h4",href:"#331-%E7%BB%A7%E6%89%BF%E5%AF%B9%E8%B1%A1%E5%8E%9F%E5%9E%8Bobjectcreate%E5%AE%9E%E7%8E%B0","aria-hidden":!0,className:"anchor"},"#")),Object(o.b)("p",null,"以下是",Object(o.b)("inlineCode",{parentName:"p"},"Object.create()"),"的模拟实现，使用",Object(o.b)("inlineCode",{parentName:"p"},"Object.create()"),"可以达成同样的效果，基本上现在都是使用",Object(o.b)("inlineCode",{parentName:"p"},"Object.create()"),"来做对象的原型继承。"),Object(o.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(o.b)("pre",{parentName:"div",className:"language-js"},Object(o.b)("code",{parentName:"pre",className:"language-js"},Object(o.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(o.b)("span",{parentName:"code",className:"token function"},"cloneObject"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token parameter"},"obj"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(o.b)("span",{parentName:"code",className:"token constant"},"F"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"{"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n    ",Object(o.b)("span",{parentName:"code",className:"token class-name"},"F"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," obj",Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"// 将被继承的对象作为空函数的prototype"),"\n    ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"return")," ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(o.b)("span",{parentName:"code",className:"token class-name"},"F"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"// 返回new期间创建的新对象,此对象的原型为被继承的对象, 通过原型链查找可以拿到被继承对象的属性"),"\n",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"}")))),Object(o.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(o.b)("pre",{parentName:"div",className:"language-js"},Object(o.b)("code",{parentName:"pre",className:"language-js"},Object(o.b)("span",{parentName:"code",className:"token keyword"},"let")," oldObj ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"{")," p",Object(o.b)("span",{parentName:"code",className:"token operator"},":")," ",Object(o.b)("span",{parentName:"code",className:"token number"},"1")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"}"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(o.b)("span",{parentName:"code",className:"token keyword"},"let")," newObj ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token function"},"cloneObject"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),"oldObj",Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\noldObj",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"p ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token number"},"2"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\nconsole",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"log"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token string"},'"oldObj newObj"'),Object(o.b)("span",{parentName:"code",className:"token punctuation"},",")," oldObj",Object(o.b)("span",{parentName:"code",className:"token punctuation"},",")," newObj",Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")))),Object(o.b)("p",null,Object(o.b)("img",{parentName:"p",src:"http://tva1.sinaimg.cn/large/69abf49bly1gwq1naoslfj20im02dwfp.jpg",alt:null})),Object(o.b)("h4",{className:"__internal",id:"332-原型式继承优缺点："},"3.3.2 原型式继承优缺点：",Object(o.b)("a",{parentName:"h4",href:"#332-%E5%8E%9F%E5%9E%8B%E5%BC%8F%E7%BB%A7%E6%89%BF%E4%BC%98%E7%BC%BA%E7%82%B9%EF%BC%9A","aria-hidden":!0,className:"anchor"},"#")),Object(o.b)("p",null,"优点： 兼容性好，最简单的对象继承。"),Object(o.b)("p",null,"缺点："),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol",className:"__internal"},"因为旧对象(",Object(o.b)("inlineCode",{parentName:"li"},"oldObj"),")是实例对象(",Object(o.b)("inlineCode",{parentName:"li"},"newObj"),")的原型，多个实例共享被继承对象的属性，存在篡改的可能。"),Object(o.b)("li",{parentName:"ol",className:"__internal"},"无法传参")),Object(o.b)("h3",{className:"__internal",id:"34-寄生式继承封装继承过程"},"3.4 寄生式继承(封装继承过程)",Object(o.b)("a",{parentName:"h3",href:"#34-%E5%AF%84%E7%94%9F%E5%BC%8F%E7%BB%A7%E6%89%BF%E5%B0%81%E8%A3%85%E7%BB%A7%E6%89%BF%E8%BF%87%E7%A8%8B","aria-hidden":!0,className:"anchor"},"#")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"创建一个仅用于封装继承过程的函数，该函数在内部以某种方式来增强对象，最后返回对象。\n寄生继承核心实现是",Object(o.b)("strong",{parentName:"p"},"完成继承"),"+给",Object(o.b)("strong",{parentName:"p"},"实例添加方法"),"。")),Object(o.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(o.b)("pre",{parentName:"div",className:"language-js"},Object(o.b)("code",{parentName:"pre",className:"language-js"},Object(o.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(o.b)("span",{parentName:"code",className:"token function"},"createOther"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token parameter"},"original"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"let")," clone ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," Object",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"create"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),"original",Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"// 继承一个对象 返回新函数"),"\n    ",Object(o.b)("span",{parentName:"code",className:"token comment"},"// do something 以某种方式来增强对象"),"\n    clone",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function-variable function"},"name")," ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"{"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"}"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"// 方法"),"\n    clone",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"sayName ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token string"},'"封装继承过程"'),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"// 属性"),"\n    ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"return")," clone",Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"// 返回这个对象"),"\n",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"}")))),Object(o.b)("h3",{className:"__internal",id:"35-寄生组合式继承callapply寄生式封装"},"3.5 寄生组合式继承(call/apply+寄生式封装)",Object(o.b)("a",{parentName:"h3",href:"#35-%E5%AF%84%E7%94%9F%E7%BB%84%E5%90%88%E5%BC%8F%E7%BB%A7%E6%89%BFcallapply%E5%AF%84%E7%94%9F%E5%BC%8F%E5%B0%81%E8%A3%85","aria-hidden":!0,className:"anchor"},"#")),Object(o.b)("h4",{className:"__internal",id:"351-寄生组合式继承原理"},"3.5.1 寄生组合式继承原理",Object(o.b)("a",{parentName:"h4",href:"#351-%E5%AF%84%E7%94%9F%E7%BB%84%E5%90%88%E5%BC%8F%E7%BB%A7%E6%89%BF%E5%8E%9F%E7%90%86","aria-hidden":!0,className:"anchor"},"#")),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol",className:"__internal"},"使用借用构造函数(",Object(o.b)("inlineCode",{parentName:"li"},"call"),")来",Object(o.b)("strong",{parentName:"li"},"继承父类 this 声明的属性/方法")),Object(o.b)("li",{parentName:"ol",className:"__internal"},"通过寄生式封装函数设置父类 prototype 为子类 prototype 的原型来继",Object(o.b)("strong",{parentName:"li"},"承父类的 prototype 声明的属性/方法"),"。")),Object(o.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(o.b)("pre",{parentName:"div",className:"language-js"},Object(o.b)("code",{parentName:"pre",className:"language-js"},Object(o.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(o.b)("span",{parentName:"code",className:"token function"},"fatherFn"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token parameter"},Object(o.b)("span",{parentName:"span",className:"token operator"},"..."),"arr"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"this"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"name ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token string"},'"父类的this属性"'),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"this"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"params ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," arr",Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"// 父类的参数"),"\n",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\nfatherFn",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"fatherFnName ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token string"},'"父类原型对象的属性或者方法"'),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(o.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(o.b)("span",{parentName:"code",className:"token function"},"sonFn"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(o.b)("span",{parentName:"code",className:"token function"},"fatherFn"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"call"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token keyword"},"this"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(o.b)("span",{parentName:"code",className:"token string"},'"借用构造继承"'),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"// 核心1 借用构造继承: 继承父类通过this声明属性和方法至子类实例的属性上"),"\n    ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"this"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"sonName ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token string"},'"子类的this属性"'),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n",Object(o.b)("span",{parentName:"code",className:"token comment"},"// 核心2 寄生式继承：封装了son.prototype对象原型式继承father.prototype的过程，并且增强了传入的对象。"),"\n",Object(o.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(o.b)("span",{parentName:"code",className:"token function"},"inheritPrototype"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token parameter"},"son",Object(o.b)("span",{parentName:"span",className:"token punctuation"},",")," father"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"const")," fatherFnPrototype ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," Object",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"create"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),"father",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"// 原型式继承：浅拷贝father.prototype对象 father.prototype为新对象的原型"),"\n    son",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," fatherFnPrototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"// 设置father.prototype为son.prototype的原型"),"\n    son",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"constructor ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," son",Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"// 修正constructor 指向"),"\n",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n",Object(o.b)("span",{parentName:"code",className:"token function"},"inheritPrototype"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),"sonFn",Object(o.b)("span",{parentName:"code",className:"token punctuation"},",")," fatherFn",Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\nsonFn",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"sonFnName ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token string"},'"子类原型对象的属性或者方法"'),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(o.b)("span",{parentName:"code",className:"token keyword"},"const")," sonFnInstance ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(o.b)("span",{parentName:"code",className:"token class-name"},"sonFn"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\nconsole",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"log"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token string"},'"寄生组合式继承子类实例"'),Object(o.b)("span",{parentName:"code",className:"token punctuation"},",")," sonFnInstance",Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")))),Object(o.b)("p",null,Object(o.b)("img",{parentName:"p",src:"http://tva1.sinaimg.cn/large/69abf49bly1gwq2egp6uoj20ms0ccwj8.jpg",alt:null})),Object(o.b)("h4",{className:"__internal",id:"352-寄生组合式继承是最成熟的继承方法"},"3.5.2 寄生组合式继承是最成熟的继承方法",Object(o.b)("a",{parentName:"h4",href:"#352-%E5%AF%84%E7%94%9F%E7%BB%84%E5%90%88%E5%BC%8F%E7%BB%A7%E6%89%BF%E6%98%AF%E6%9C%80%E6%88%90%E7%86%9F%E7%9A%84%E7%BB%A7%E6%89%BF%E6%96%B9%E6%B3%95","aria-hidden":!0,className:"anchor"},"#")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"寄生组合式继承是最成熟的继承方法, 也是现在最常用的继承方法，众多 JS 库采用的继承方案也是它。")),Object(o.b)("p",null,"寄生组合式继承相对于组合继承有如下优点："),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol",className:"__internal"},Object(o.b)("p",{parentName:"li"},"只调用一次父类",Object(o.b)("inlineCode",{parentName:"p"},"fatherFn"),"构造函数。")),Object(o.b)("li",{parentName:"ol",className:"__internal"},Object(o.b)("p",{parentName:"li"},"避免在子类 prototype 上创建不必要多余的属性。")),Object(o.b)("li",{parentName:"ol",className:"__internal"},Object(o.b)("p",{parentName:"li"},"使用原型式继承父类的 prototype，保持了原型链上下文不变。")),Object(o.b)("li",{parentName:"ol",className:"__internal"},Object(o.b)("p",{parentName:"li"},"子类的 prototype 只有子类通过 prototype 声明的属性/方法和父类 prototype 上的属性/方法泾渭分明。"))),Object(o.b)("h4",{className:"__internal",id:"353-关于-constructor-的补充"},"3.5.3 关于 constructor 的补充",Object(o.b)("a",{parentName:"h4",href:"#353-%E5%85%B3%E4%BA%8E-constructor-%E7%9A%84%E8%A1%A5%E5%85%85","aria-hidden":!0,className:"anchor"},"#")),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol",className:"__internal"},Object(o.b)("strong",{parentName:"li"},"为什么要修正 constructor 指向？"))),Object(o.b)("p",null,"在寄生组合式继承中有一段如下一段修正",Object(o.b)("inlineCode",{parentName:"p"},"constructor")," 指向的代码，很多人对于它的作用以及为什么要修正它不太清楚。"),Object(o.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(o.b)("pre",{parentName:"div",className:"language-js"},Object(o.b)("code",{parentName:"pre",className:"language-js"},"son",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"constructor ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," son",Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"// 修正constructor 指向")))),Object(o.b)("h5",{className:"__internal",id:"constructor-的作用"},"constructor 的作用",Object(o.b)("a",{parentName:"h5",href:"#constructor-%E7%9A%84%E4%BD%9C%E7%94%A8","aria-hidden":!0,className:"anchor"},"#")),Object(o.b)("p",null,Object(o.b)("a",{parentName:"p",href:"https://link.juejin.cn?target=https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FJavaScript%2FReference%2FGlobal_Objects%2FObject%2Fconstructor",title:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor",target:"_blank"},"MDN"),"的定义：",Object(o.b)("strong",{parentName:"p"},"返回创建实例对象的",Object(o.b)("inlineCode",{parentName:"strong"},"Object"),"构造函数的引用"),"。"),Object(o.b)("p",null,"即返回实例对象的构造函数的引用，例如："),Object(o.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(o.b)("pre",{parentName:"div",className:"language-js"},Object(o.b)("code",{parentName:"pre",className:"language-js"},Object(o.b)("span",{parentName:"code",className:"token keyword"},"let")," instance ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(o.b)("span",{parentName:"code",className:"token class-name"},"sonFn"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\ninstance",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"constructor",Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"// sonFn函数")))),Object(o.b)("ol",{start:2},Object(o.b)("li",{parentName:"ol",className:"__internal"},Object(o.b)("strong",{parentName:"li"},Object(o.b)("inlineCode",{parentName:"strong"},"constructor"),"的应用场景"))),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"当我们只有实例对象没有构造函数的引用时"),"："),Object(o.b)("p",null,"某些场景下，我们对实例对象经过多轮导入导出，我们不知道实例是从哪个函数中构造出来或者追踪实例的构造函数，较为艰难。"),Object(o.b)("p",null,"这个时候就可以通过实例对象的",Object(o.b)("inlineCode",{parentName:"p"},"constructor"),"属性来得到构造函数的引用："),Object(o.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(o.b)("pre",{parentName:"div",className:"language-js"},Object(o.b)("code",{parentName:"pre",className:"language-js"},Object(o.b)("span",{parentName:"code",className:"token keyword"},"let")," instance ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(o.b)("span",{parentName:"code",className:"token class-name"},"sonFn"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"// 实例化子类"),"\n",Object(o.b)("span",{parentName:"code",className:"token keyword"},"export")," instance",Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(o.b)("span",{parentName:"code",className:"token comment"},"// 多轮导入+导出，导致sonFn追踪非常麻烦，或者不想在文件中再引入sonFn"),"\n",Object(o.b)("span",{parentName:"code",className:"token keyword"},"let"),"  fn ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," instance",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"constructor\n",Object(o.b)("span",{parentName:"code",className:"token comment"},"// do something： new fn() / fn.prototype / fn.length / fn.arguments等等")))),Object(o.b)("ol",{start:3},Object(o.b)("li",{parentName:"ol",className:"__internal"},Object(o.b)("strong",{parentName:"li"},"保持",Object(o.b)("inlineCode",{parentName:"strong"},"constructor"),"指向的一致性"))),Object(o.b)("p",null,"因此每次重写函数的 prototype 都应该修正一下",Object(o.b)("inlineCode",{parentName:"p"},"constructor"),"的指向，以保持读取",Object(o.b)("inlineCode",{parentName:"p"},"constructor"),"行为的一致性。"),Object(o.b)("h3",{className:"__internal",id:"36-es6-extends-继承"},"3.6 ES6 extends 继承",Object(o.b)("a",{parentName:"h3",href:"#36-es6-extends-%E7%BB%A7%E6%89%BF","aria-hidden":!0,className:"anchor"},"#")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"ES6 继承的原理跟寄生组合式继承是一样的。 核心继承代码如下(bable 转义之后的)\n另外子类是通过借用构造函数继承(call)来继承父类通过 this 声明的属性/方法，也跟寄生组合式继承一样。")),Object(o.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(o.b)("pre",{parentName:"div",className:"language-js"},Object(o.b)("code",{parentName:"pre",className:"language-js"},Object(o.b)("span",{parentName:"code",className:"token comment"},"// 寄生式继承 封装继承过程"),"\n",Object(o.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(o.b)("span",{parentName:"code",className:"token function"},"_inherits"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token parameter"},"son",Object(o.b)("span",{parentName:"span",className:"token punctuation"},",")," father"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(o.b)("span",{parentName:"code",className:"token comment"},"// 原型式继承: 设置father.prototype为son.prototype的原型 用于继承father.prototype的属性/方法"),"\n    son",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," Object",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"create"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),"father ",Object(o.b)("span",{parentName:"code",className:"token operator"},"&&")," father",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    son",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"constructor ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," son",Object(o.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"// 修正constructor 指向"),"\n    ",Object(o.b)("span",{parentName:"code",className:"token comment"},"// 将父类设置为子类的原型 用于继承父类的静态属性/方法(father.some)"),"\n    ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),"father",Object(o.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n        Object",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"setPrototypeOf ",Object(o.b)("span",{parentName:"code",className:"token operator"},"?")," Object",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"setPrototypeOf"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),"son",Object(o.b)("span",{parentName:"code",className:"token punctuation"},",")," father",Object(o.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(o.b)("span",{parentName:"code",className:"token operator"},":")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),"son",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"__proto__ ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," father",Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"}")))),Object(o.b)("h4",{className:"__internal",id:"361-es5-继承与-es6-继承的区别"},"3.6.1 ES5 继承与 ES6 继承的区别",Object(o.b)("a",{parentName:"h4",href:"#361-es5-%E7%BB%A7%E6%89%BF%E4%B8%8E-es6-%E7%BB%A7%E6%89%BF%E7%9A%84%E5%8C%BA%E5%88%AB","aria-hidden":!0,className:"anchor"},"#")),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol",className:"__internal"},Object(o.b)("p",{parentName:"li"},"ES5 的继承实质上是",Object(o.b)("strong",{parentName:"p"},"先创建子类的实例对象，再将父类的方法添加到 this 上"),"。")),Object(o.b)("li",{parentName:"ol",className:"__internal"},Object(o.b)("p",{parentName:"li"},"ES6 的继承是",Object(o.b)("strong",{parentName:"p"},"先创建父类的实例对象 this，再用子类的构造函数修改 this"),"。")),Object(o.b)("li",{parentName:"ol",className:"__internal"},Object(o.b)("p",{parentName:"li"},"ES6 因为子类没有自己的 this 对象，所以必须先调用父类的 super()方法。"))),Object(o.b)("h4",{className:"__internal",id:"362-关于es6实现多类继承"},"3.6.2 关于ES6实现多类继承",Object(o.b)("a",{parentName:"h4",href:"#362-%E5%85%B3%E4%BA%8Ees6%E5%AE%9E%E7%8E%B0%E5%A4%9A%E7%B1%BB%E7%BB%A7%E6%89%BF","aria-hidden":!0,className:"anchor"},"#")),Object(o.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(o.b)("pre",{parentName:"div",className:"language-js"},Object(o.b)("code",{parentName:"pre",className:"language-js"},Object(o.b)("span",{parentName:"code",className:"token keyword"},"class")," ",Object(o.b)("span",{parentName:"code",className:"token class-name"},"A")," ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"extends")," ",Object(o.b)("span",{parentName:"code",className:"token class-name"},"B"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},","),Object(o.b)("span",{parentName:"code",className:"token constant"},"C"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},","),Object(o.b)("span",{parentName:"code",className:"token constant"},"D"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},","),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(o.b)("span",{parentName:"code",className:"token operator"},"..."),"other",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"]")))),Object(o.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(o.b)("pre",{parentName:"div",className:"language-js"},Object(o.b)("code",{parentName:"pre",className:"language-js"},Object(o.b)("span",{parentName:"code",className:"token keyword"},"class")," ",Object(o.b)("span",{parentName:"code",className:"token class-name"},"A"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"{"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n",Object(o.b)("span",{parentName:"code",className:"token keyword"},"class")," ",Object(o.b)("span",{parentName:"code",className:"token class-name"},"B"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"{"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n",Object(o.b)("span",{parentName:"code",className:"token keyword"},"class")," ",Object(o.b)("span",{parentName:"code",className:"token class-name"},"C"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"{"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n",Object(o.b)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(o.b)("span",{parentName:"code",className:"token function-variable function"},"copyProperties")," ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token parameter"},"target",Object(o.b)("span",{parentName:"span",className:"token punctuation"},","),"source"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token operator"},"=>"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"{")," ",Object(o.b)("span",{parentName:"code",className:"token comment"},"//加一个拷贝函数，用来拷贝传入的所有class的静态，及其prototype。"),"\n    Object",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"getOwnpropertyNames"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),"source",Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"concat"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),"Object",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"getOwnpropertySymbols"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),"source",Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"forEach"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token parameter"},"prop"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token operator"},"=>"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(o.b)("span",{parentName:"code",className:"token comment"},"// 过滤条件"),"\n        ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"if"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token operator"},"!"),"prop",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"match"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token operator"},"/"),Object(o.b)("span",{parentName:"code",className:"token operator"},"^"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token operator"},"?"),Object(o.b)("span",{parentName:"code",className:"token operator"},":"),"constructor",Object(o.b)("span",{parentName:"code",className:"token operator"},"|"),"protype",Object(o.b)("span",{parentName:"code",className:"token operator"},"|"),"arguments",Object(o.b)("span",{parentName:"code",className:"token operator"},"|"),"name",Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n            Object",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"defineProperty"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),"target",Object(o.b)("span",{parentName:"code",className:"token punctuation"},",")," prop",Object(o.b)("span",{parentName:"code",className:"token punctuation"},",")," Object",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"getOwnPropertyDescriptor"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),"source",Object(o.b)("span",{parentName:"code",className:"token punctuation"},",")," prop",Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),"\n        ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n    ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"}"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),"\n",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n",Object(o.b)("span",{parentName:"code",className:"token comment"},"// 创建Mixins主体"),"\n",Object(o.b)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(o.b)("span",{parentName:"code",className:"token function-variable function"},"Mixins")," ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token parameter"},"BaseClass",Object(o.b)("span",{parentName:"span",className:"token punctuation"},",")," ",Object(o.b)("span",{parentName:"span",className:"token operator"},"..."),"mixins"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token operator"},"=>"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(o.b)("span",{parentName:"code",className:"token comment"},"// 创建一个基础Base。将其他mixin与其绑定"),"\n    ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"class")," ",Object(o.b)("span",{parentName:"code",className:"token class-name"},"Base")," ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"extends")," ",Object(o.b)("span",{parentName:"code",className:"token class-name"},"BaseClass"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n        ",Object(o.b)("span",{parentName:"code",className:"token function"},"constructor"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token parameter"},Object(o.b)("span",{parentName:"span",className:"token operator"},"..."),"props"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n            ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"super"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token operator"},"..."),"props",Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),"\n        ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n    ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n    ",Object(o.b)("span",{parentName:"code",className:"token comment"},"// 将其余需要被继承的class 与Base绑定。其类及其prototype"),"\n    mixins",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.b)("span",{parentName:"code",className:"token function"},"forEach"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token parameter"},"mixin"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(o.b)("span",{parentName:"code",className:"token operator"},"=>")," ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n        ",Object(o.b)("span",{parentName:"code",className:"token function"},"copyProperties"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),"Base",Object(o.b)("span",{parentName:"code",className:"token punctuation"},",")," mixin",Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),"\n        ",Object(o.b)("span",{parentName:"code",className:"token function"},"copyProperties"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token class-name"},"Base"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},",")," mixin",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),"\n    ",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"}"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),"\n    ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"return")," Base\n",Object(o.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n",Object(o.b)("span",{parentName:"code",className:"token keyword"},"class")," ",Object(o.b)("span",{parentName:"code",className:"token class-name"},"Demo")," ",Object(o.b)("span",{parentName:"code",className:"token keyword"},"extends")," ",Object(o.b)("span",{parentName:"code",className:"token class-name"},"Mixins"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.b)("span",{parentName:"code",className:"token constant"},"A"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},","),Object(o.b)("span",{parentName:"code",className:"token constant"},"B"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},","),Object(o.b)("span",{parentName:"code",className:"token constant"},"C"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"{"),Object(o.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n"))),Object(o.b)("h3",{className:"__internal",id:"总结"},"总结",Object(o.b)("a",{parentName:"h3",href:"#%E6%80%BB%E7%BB%93","aria-hidden":!0,className:"anchor"},"#")),Object(o.b)("p",null,Object(o.b)("img",{parentName:"p",src:"http://tva1.sinaimg.cn/large/69abf49bly1gwq1q2hwskj21ah0nj0ys.jpg",alt:null})))}j.isMDXComponent=!0,j=Object(c.hot)(e)(j),(m="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default:void 0)&&(m.register(r,"makeShortcode","E:\\h-project\\my-blog\\docs\\notes\\17.md"),m.register(l,"Footer","E:\\h-project\\my-blog\\docs\\notes\\17.md"),m.register(u,"layoutProps","E:\\h-project\\my-blog\\docs\\notes\\17.md"),m.register("wrapper","MDXLayout","E:\\h-project\\my-blog\\docs\\notes\\17.md"),m.register(j,"MDXContent","E:\\h-project\\my-blog\\docs\\notes\\17.md")),(N="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.leaveModule:void 0)&&N(e)}.call(this,t(4)(e))}}]);