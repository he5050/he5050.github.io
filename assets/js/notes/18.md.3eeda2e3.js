(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{441:function(e,a,n){"use strict";n.r(a),function(e){n.d(a,"default",(function(){return j}));var t,c=n(169),s=(n(410),n(0),n(170)),o=["components"];function p(){return(p=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var n=arguments[a];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])}return e}).apply(this,arguments)}function m(e,a){if(null==e)return{};var n,t,c=function(e,a){if(null==e)return{};var n,t,c={},s=Object.keys(e);for(t=0;t<s.length;t++)n=s[t],a.indexOf(n)>=0||(c[n]=e[n]);return c}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)n=s[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(c[n]=e[n])}return c}(t="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.enterModule:void 0)&&t(e);"undefined"!=typeof reactHotLoaderGlobal&&reactHotLoaderGlobal.default.signature;var b,N,r=function(e){return function(a){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(s.b)("div",a)}},l=r("Footer"),u=r("ImageWrap"),d={};function j(e){var a=e.components,n=m(e,o);return Object(s.b)("wrapper",p({},d,n,{components:a,mdxType:"MDXLayout"}),Object(s.b)("blockquote",null,Object(s.b)(l,{mdxType:"Footer"})),Object(s.b)("h1",{className:"__internal",id:"18-常用的排序算法"},"18 常用的排序算法",Object(s.b)("a",{parentName:"h1",href:"#18-%E5%B8%B8%E7%94%A8%E7%9A%84%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95","aria-hidden":!0,className:"anchor"},"#")),Object(s.b)("h2",{className:"__internal",id:"1-冒泡排序"},"1. 冒泡排序",Object(s.b)("a",{parentName:"h2",href:"#1-%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F","aria-hidden":!0,className:"anchor"},"#")),Object(s.b)(u,{title:"冒泡排序",src:"/images/sf/冒泡排序.gif",mdxType:"ImageWrap"}),Object(s.b)("p",null,"思路:"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul",className:"__internal"},"俩俩交换，大的放在后面，第一次排序后最大值已在数组末尾。"),Object(s.b)("li",{parentName:"ul",className:"__internal"},"因为俩俩交换，需要",Object(s.b)("inlineCode",{parentName:"li"},"n-1"),"趟排序，比如 10 个数，需要 9 趟排序")),Object(s.b)("p",null,"要点："),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul",className:"__internal"},Object(s.b)("strong",{parentName:"li"},"两个 for 循环，外层循环控制排序的趟数，内层循环控制比较的次数"),Object(s.b)("ul",{parentName:"li"},Object(s.b)("li",{parentName:"ul",className:"__internal"},Object(s.b)("strong",{parentName:"li"},"每趟过后，比较的次数都应该要减 1")))),Object(s.b)("li",{parentName:"ul",className:"__internal"},"优化：如果一趟排序后也没有交换位置，那么该数组已有序,就可以结束排序")),Object(s.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},Object(s.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(s.b)("span",{parentName:"code",className:"token function"},"bubbleSort"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token parameter"},"arr"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"const")," len ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),"length",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token comment"},"//外层循环是排序的趟数"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"for")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," i ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," i ",Object(s.b)("span",{parentName:"code",className:"token operator"},"<")," len",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," i",Object(s.b)("span",{parentName:"code",className:"token operator"},"++"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token comment"},"//每比较一趟就重新初始化为0"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," isChange ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token comment"},"//内层循环是当前趟数需要比较的次数"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"for")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," j ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," j ",Object(s.b)("span",{parentName:"code",className:"token operator"},"<")," len ",Object(s.b)("span",{parentName:"code",className:"token operator"},"-")," i ",Object(s.b)("span",{parentName:"code",className:"token operator"},"-")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"1"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," j",Object(s.b)("span",{parentName:"code",className:"token operator"},"++"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n            ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"j",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},">")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"j ",Object(s.b)("span",{parentName:"code",className:"token operator"},"+")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"1"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n                ",Object(s.b)("span",{parentName:"code",className:"token comment"},"//前一位与后一位与前一位比较，如果前一位比后一位要大，那么交换"),"\n                ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"j",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"j ",Object(s.b)("span",{parentName:"code",className:"token operator"},"+")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"1"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"j ",Object(s.b)("span",{parentName:"code",className:"token operator"},"+")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"1"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"j",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n                isChange ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"1"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n            ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token comment"},"//如果比较完一趟没有发生置换，那么说明已经排好序了，不需要再执行下去了"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"isChange ",Object(s.b)("span",{parentName:"code",className:"token operator"},"==")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n            ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"break"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"return")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," arr ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token number"},"9"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"18"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"2"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"3"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"52"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"4"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"11"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"1"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"3"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"bubbleSort"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// [1, 2, 3, 3, 4, 9, 11, 18, 52]")))),Object(s.b)("h2",{className:"__internal",id:"2-选择排序"},"2. 选择排序",Object(s.b)("a",{parentName:"h2",href:"#2-%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F","aria-hidden":!0,className:"anchor"},"#")),Object(s.b)(u,{title:"冒泡排序",src:"/images/sf/选择排序.gif",mdxType:"ImageWrap"}),Object(s.b)("p",null,"思路:"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul",className:"__internal"},"找到数组中最大的元素，与数组最后一位元素交换"),Object(s.b)("li",{parentName:"ul",className:"__internal"},"当只有一个数时，则不需要选择了，因此需要",Object(s.b)("inlineCode",{parentName:"li"},"n-1"),"趟排序，比如 10 个数，需要 9 趟排序")),Object(s.b)("p",null,"要点："),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul",className:"__internal"},Object(s.b)("strong",{parentName:"li"},"两个 for 循环，外层循环控制排序的趟数，内层循环找到当前趟数的最大值，随后与当前趟数组最后的一位元素交换"))),Object(s.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},Object(s.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(s.b)("span",{parentName:"code",className:"token function"},"selectionSort"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token parameter"},"arr"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," len ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),"length",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token comment"},"//外层循环控制需要排序的趟数"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"for")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," i ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," i ",Object(s.b)("span",{parentName:"code",className:"token operator"},"<")," len ",Object(s.b)("span",{parentName:"code",className:"token operator"},"-")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"1"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," i",Object(s.b)("span",{parentName:"code",className:"token operator"},"++"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token comment"},"//新的趟数、将角标重新赋值为0"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," pos ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token comment"},"//内层循环控制遍历数组的个数并得到最大数的角标"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"for")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," j ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," j ",Object(s.b)("span",{parentName:"code",className:"token operator"},"<")," len ",Object(s.b)("span",{parentName:"code",className:"token operator"},"-")," i",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," j",Object(s.b)("span",{parentName:"code",className:"token operator"},"++"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n            ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"j",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},">")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"pos",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n                pos ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," j",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n            ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 本轮循环 交换本轮数组最后一个的位置"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"len ",Object(s.b)("span",{parentName:"code",className:"token operator"},"-")," i ",Object(s.b)("span",{parentName:"code",className:"token operator"},"-")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"1"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"pos",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"pos",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"len ",Object(s.b)("span",{parentName:"code",className:"token operator"},"-")," i ",Object(s.b)("span",{parentName:"code",className:"token operator"},"-")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"1"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"return")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," arr ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token number"},"9"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"18"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"2"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"3"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"52"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"4"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"11"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"1"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"3"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"selectionSort"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// [1, 2, 3, 3, 4, 9, 11, 18, 52]")))),Object(s.b)("h2",{className:"__internal",id:"3-插入排序"},"3. 插入排序",Object(s.b)("a",{parentName:"h2",href:"#3-%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F","aria-hidden":!0,className:"anchor"},"#")),Object(s.b)(u,{title:"冒泡排序",src:"/images/sf/插入排序.gif",mdxType:"ImageWrap"}),Object(s.b)("p",null,"思路："),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul",className:"__internal"},"将一个元素插入到已有序的数组中，在初始时未知是否存在有序的数据，因此将元素",Object(s.b)("strong",{parentName:"li"},"第一个元素看成是有序的")),Object(s.b)("li",{parentName:"ul",className:"__internal"},"与有序的数组进行比较，",Object(s.b)("strong",{parentName:"li"},"比它大则直接放入，比它小则移动数组元素的位置，找到个合适的位置插入")),Object(s.b)("li",{parentName:"ul",className:"__internal"},"当只有一个数时，则不需要插入了，因此需要",Object(s.b)("inlineCode",{parentName:"li"},"n-1"),"趟排序，比如 10 个数，需要 9 趟排序")),Object(s.b)("p",null,"要点："),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul",className:"__internal"},"一个 for 循环内嵌一个 while 循环实现，外层 for 循环控制需要排序的趟数，while 循环找到合适的插入位置(并且插入的位置不能小于 0)")),Object(s.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},Object(s.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(s.b)("span",{parentName:"code",className:"token function"},"insertionSort"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token parameter"},"arr"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"const")," len ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),"length",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," preIndex",Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," current",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token comment"},"//外层循环控制需要排序的趟数(从1开始因为将第0位看成了有序数据)"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"for")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," i ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"1"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," i ",Object(s.b)("span",{parentName:"code",className:"token operator"},"<")," len",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," i",Object(s.b)("span",{parentName:"code",className:"token operator"},"++"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n        preIndex ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," i ",Object(s.b)("span",{parentName:"code",className:"token operator"},"-")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"1"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n        current ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"i",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token comment"},"//如果前一位(已排序的数据)比当前数据要大，那么就进入循环比较[参考第二趟排序]"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"while")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"preIndex ",Object(s.b)("span",{parentName:"code",className:"token operator"},">=")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"&&")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"preIndex",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},">")," current",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n            ",Object(s.b)("span",{parentName:"code",className:"token comment"},"//往后退一个位置，让当前数据与之前前位进行比较"),"\n            arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"preIndex ",Object(s.b)("span",{parentName:"code",className:"token operator"},"+")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"1"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"preIndex",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n            ",Object(s.b)("span",{parentName:"code",className:"token comment"},"//不断往前，直到退出循环"),"\n            preIndex",Object(s.b)("span",{parentName:"code",className:"token operator"},"--"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token comment"},"//退出了循环说明找到了合适的位置了，将当前数据插入合适的位置中"),"\n        arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"preIndex ",Object(s.b)("span",{parentName:"code",className:"token operator"},"+")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"1"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," current",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"return")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}")))),Object(s.b)("h2",{className:"__internal",id:"4-快速排序"},"4. 快速排序",Object(s.b)("a",{parentName:"h2",href:"#4-%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F","aria-hidden":!0,className:"anchor"},"#")),Object(s.b)(u,{title:"冒泡排序",src:"/images/sf/快速排序.gif",mdxType:"ImageWrap"}),Object(s.b)("blockquote",null,Object(s.b)("p",{parentName:"blockquote"},"快速排序将大的排序分成若干个小的排序， 首先选定一个基准，然后将左右指针置于数组两侧，先从右向左，查看数组元素与基准的大小，大于基准指针左移，小于基准将数值放于基准位置，再计算左指针与此时基准大小，小于基准指针右移，大于基准放于右指针位置，直到左右指针的位置重合。然后递归，再将基准左右的两个数组再寻找基准，左右分类，直至递归到每个数组只包含一个数时，结束递归。")),Object(s.b)("p",null,"思路："),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul",className:"__internal"},"在数组中找一个元素(节点)，比它小的放在节点的左边，比它大的放在节点右边。一趟下来，比节点小的在左边，比节点大的在右边。"),Object(s.b)("li",{parentName:"ul",className:"__internal"},"不断执行这个操作....")),Object(s.b)("p",null,"要点："),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul",className:"__internal"},"快速排序用递归比较好写,支点取中间，使用 L 和 R 表示数组的最小和最大位置",Object(s.b)("ul",{parentName:"li"},Object(s.b)("li",{parentName:"ul",className:"__internal"},"不断进行比较，直到找到比支点小(大)的数，随后交换，不断减小范围"))),Object(s.b)("li",{parentName:"ul",className:"__internal"},"递归 L 到支点前一个元素(j)(执行相同的操作,同上)"),Object(s.b)("li",{parentName:"ul",className:"__internal"},"递归支点后一个元素(i)到 R 元素(执行相同的操作,同上)")),Object(s.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},Object(s.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(s.b)("span",{parentName:"code",className:"token function"},"quickSort"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token parameter"},"arr",Object(s.b)("span",{parentName:"span",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"span",className:"token constant"},"L")," ",Object(s.b)("span",{parentName:"span",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"span",className:"token number"},"0"),Object(s.b)("span",{parentName:"span",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"span",className:"token constant"},"R")," ",Object(s.b)("span",{parentName:"span",className:"token operator"},"=")," arr",Object(s.b)("span",{parentName:"span",className:"token punctuation"},"."),"length ",Object(s.b)("span",{parentName:"span",className:"token operator"},"-")," ",Object(s.b)("span",{parentName:"span",className:"token number"},"1")),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"const")," len ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),"length",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 这里需要做一个判断是否出现越界的情况"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," i ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token constant"},"L")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},">=")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"?")," ",Object(s.b)("span",{parentName:"code",className:"token constant"},"L")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},":")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," j ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token constant"},"R")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},">=")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"?")," ",Object(s.b)("span",{parentName:"code",className:"token constant"},"R")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},":")," len ",Object(s.b)("span",{parentName:"code",className:"token operator"},"-")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"1"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n    ",Object(s.b)("span",{parentName:"code",className:"token comment"},"//支点"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," pivot ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"Math",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"floor"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token constant"},"L")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"+")," ",Object(s.b)("span",{parentName:"code",className:"token constant"},"R"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"/")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"2"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 取每组的中间 如 (0 + 5)/2 = 2.5 我们就取2为支点"),"\n\n    ",Object(s.b)("span",{parentName:"code",className:"token comment"},"//左右两端进行扫描，只要两端还没有交替，就一直扫描"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"while")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"i ",Object(s.b)("span",{parentName:"code",className:"token operator"},"<=")," j",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token comment"},"//寻找直到比支点大的数"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"while")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"pivot ",Object(s.b)("span",{parentName:"code",className:"token operator"},">")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"i",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," i",Object(s.b)("span",{parentName:"code",className:"token operator"},"++"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n        ",Object(s.b)("span",{parentName:"code",className:"token comment"},"//寻找直到比支点小的数"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"while")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"pivot ",Object(s.b)("span",{parentName:"code",className:"token operator"},"<")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"j",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," j",Object(s.b)("span",{parentName:"code",className:"token operator"},"--"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n        ",Object(s.b)("span",{parentName:"code",className:"token comment"},"//此时已经分别找到了比支点小的数(右边)、比支点大的数(左边)，它们进行交换"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"i ",Object(s.b)("span",{parentName:"code",className:"token operator"},"<=")," j",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n            ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"i",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"j",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"j",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"i",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n            i",Object(s.b)("span",{parentName:"code",className:"token operator"},"++"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n            j",Object(s.b)("span",{parentName:"code",className:"token operator"},"--"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token comment"},"//上面一个while保证了第一趟排序支点的左边比支点小，支点的右边比支点大了。"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token comment"},"//“左边”再做排序，直到左边剩下一个数(递归出口)"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token constant"},"L")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"<")," j",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token function"},"quickSort"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token constant"},"L"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," j",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n    ",Object(s.b)("span",{parentName:"code",className:"token comment"},"//“右边”再做排序，直到右边剩下一个数(递归出口)"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"i ",Object(s.b)("span",{parentName:"code",className:"token operator"},"<")," ",Object(s.b)("span",{parentName:"code",className:"token constant"},"R"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token function"},"quickSort"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," i",Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token constant"},"R"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"var")," c ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token number"},"5"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"8"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"4"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"7"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"1"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"9"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"2"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"6"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"quickSort"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"c",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\nconsole",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"log"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"c",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")))),Object(s.b)("h2",{className:"__internal",id:"5-希尔排序"},"5. 希尔排序",Object(s.b)("a",{parentName:"h2",href:"#5-%E5%B8%8C%E5%B0%94%E6%8E%92%E5%BA%8F","aria-hidden":!0,className:"anchor"},"#")),Object(s.b)(u,{title:"冒泡排序",src:"/images/sf/希尔排序.gif",mdxType:"ImageWrap"}),Object(s.b)("p",null,"思路："),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul",className:"__internal"},Object(s.b)("p",{parentName:"li"},"希尔排序也称递减增量排序算法,希尔排序实质上就是插入排序的增强版，希尔排序将数组分隔成 n 组来进行插入排序，",Object(s.b)("strong",{parentName:"p"},"直至该数组宏观上有序，"),"最后再进行插入排序时就不用移动那么多次位置了"),Object(s.b)("ul",{parentName:"li"},Object(s.b)("li",{parentName:"ul",className:"__internal"},"插入排序在对几乎已经排好序的数据操作时，效率高，即可以达到线性排序的效率"),Object(s.b)("li",{parentName:"ul",className:"__internal"},"但插入排序一般来说是低效的，因为插入排序每次只能将数据移动一位")))),Object(s.b)("p",null,"要点："),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul",className:"__internal"},"希尔增量一般是",Object(s.b)("inlineCode",{parentName:"li"},"gap = gap / 2"),"，只是比普通版插入排序多了这么一个 for 循环罢了")),Object(s.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},Object(s.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(s.b)("span",{parentName:"code",className:"token function"},"shellSort"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token parameter"},"arr"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"const")," len ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),"length",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token comment"},"//增量每次都/2"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"for")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," step ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," Math",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"floor"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"len ",Object(s.b)("span",{parentName:"code",className:"token operator"},"/")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"2"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," step ",Object(s.b)("span",{parentName:"code",className:"token operator"},">")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," step ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," Math",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"floor"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"step ",Object(s.b)("span",{parentName:"code",className:"token operator"},"/")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"2"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token comment"},"//从增量那组开始进行插入排序，直至完毕"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"for")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," i ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," step",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," i ",Object(s.b)("span",{parentName:"code",className:"token operator"},"<")," len",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," i",Object(s.b)("span",{parentName:"code",className:"token operator"},"++"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n            ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," j ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," i",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n            ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," temp ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"j",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n            ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// j - step 就是代表与它同组隔壁的元素"),"\n            ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"while")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"j ",Object(s.b)("span",{parentName:"code",className:"token operator"},"-")," step ",Object(s.b)("span",{parentName:"code",className:"token operator"},">=")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"&&")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"j ",Object(s.b)("span",{parentName:"code",className:"token operator"},"-")," step",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},">")," temp",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n                arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"j",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"j ",Object(s.b)("span",{parentName:"code",className:"token operator"},"-")," step",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n                j ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," j ",Object(s.b)("span",{parentName:"code",className:"token operator"},"-")," step",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n            ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n            arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"j",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," temp",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"return")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}")))),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul",className:"__internal"},"直接插入排序是稳定的，而希尔排序是不稳定的（相等数据可能交互位置）"),Object(s.b)("li",{parentName:"ul",className:"__internal"},"直接插入排序更适合于原始记录基本有序的集合"),Object(s.b)("li",{parentName:"ul",className:"__internal"},"希尔排序的比较次数和移动次数都要比直接插入排序少，当 N 越大时，效果越明显"),Object(s.b)("li",{parentName:"ul",className:"__internal"},"在希尔排序中，增量序列（间隔）gap 的取法必须满足：最后一个步长必须是 1"),Object(s.b)("li",{parentName:"ul",className:"__internal"},"直接插入排序也适用于链式存储结构；希尔排序不适用于链式结构")),Object(s.b)("h2",{className:"__internal",id:"6-归并排序"},"6. 归并排序",Object(s.b)("a",{parentName:"h2",href:"#6-%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F","aria-hidden":!0,className:"anchor"},"#")),Object(s.b)(u,{title:"冒泡排序",src:"/images/sf/归并排序.gif",mdxType:"ImageWrap"}),Object(s.b)("p",null,"思路："),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul",className:"__internal"},"将两个已排好序的数组合并成一个有序的数组。",Object(s.b)("ul",{parentName:"li"},Object(s.b)("li",{parentName:"ul",className:"__internal"},Object(s.b)("strong",{parentName:"li"},"将元素分隔开来，看成是有序的数组，进行比较合并")),Object(s.b)("li",{parentName:"ul",className:"__internal"},"不断拆分和合并，直到只有一个元素")))),Object(s.b)("p",null,"要点："),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul",className:"__internal"},"在第一趟排序时实质是两个元素(看成是两个已有序的数组)来进行合并，不断执行这样的操作，最终数组有序"),Object(s.b)("li",{parentName:"ul",className:"__internal"},"拆分左边，右边，合并...")),Object(s.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},Object(s.b)("span",{parentName:"code",className:"token comment"},"/**\n * 归并排序\n *\n * @param arr\n * @param L      指向数组第一个元素\n * @param R      指向数组最后一个元素\n */"),"\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(s.b)("span",{parentName:"code",className:"token function"},"mergeSort"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token parameter"},"arr",Object(s.b)("span",{parentName:"span",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"span",className:"token constant"},"L")," ",Object(s.b)("span",{parentName:"span",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"span",className:"token number"},"0"),Object(s.b)("span",{parentName:"span",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"span",className:"token constant"},"R")," ",Object(s.b)("span",{parentName:"span",className:"token operator"},"=")," arr",Object(s.b)("span",{parentName:"span",className:"token punctuation"},"."),"length ",Object(s.b)("span",{parentName:"span",className:"token operator"},"-")," ",Object(s.b)("span",{parentName:"span",className:"token number"},"1")),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token comment"},"//如果只有一个元素，那就不用排序了"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token constant"},"L")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"==")," ",Object(s.b)("span",{parentName:"code",className:"token constant"},"R"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"return"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}")," ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"else")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token comment"},"//取中间的数，进行拆分"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," ",Object(s.b)("span",{parentName:"code",className:"token constant"},"M")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," Math",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"floor"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token constant"},"L")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"+")," ",Object(s.b)("span",{parentName:"code",className:"token constant"},"R"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"/")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"2"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n        ",Object(s.b)("span",{parentName:"code",className:"token comment"},"//左边的数不断进行拆分"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token function"},"mergeSort"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token constant"},"L"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token constant"},"M"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n        ",Object(s.b)("span",{parentName:"code",className:"token comment"},"//右边的数不断进行拆分"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token function"},"mergeSort"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token constant"},"M")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"+")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"1"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token constant"},"R"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n        ",Object(s.b)("span",{parentName:"code",className:"token comment"},"//合并"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token function"},"merge"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token constant"},"L"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token constant"},"M")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"+")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"1"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token constant"},"R"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n",Object(s.b)("span",{parentName:"code",className:"token comment"},"/**\n * 合并数组\n *\n * @param arr\n * @param L      指向数组第一个元素\n * @param M      指向数组分隔的元素\n * @param R      指向数组最后的元素\n */"),"\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(s.b)("span",{parentName:"code",className:"token function"},"merge"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token parameter"},"arr",Object(s.b)("span",{parentName:"span",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"span",className:"token constant"},"L"),Object(s.b)("span",{parentName:"span",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"span",className:"token constant"},"M"),Object(s.b)("span",{parentName:"span",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"span",className:"token constant"},"R")),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token comment"},"//左边的数组的大小"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," leftArr ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," Array",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"from"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token function"},"Array"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token constant"},"M")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"-")," ",Object(s.b)("span",{parentName:"code",className:"token constant"},"L"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token parameter"},"v",Object(s.b)("span",{parentName:"span",className:"token punctuation"},",")," k"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=>")," k",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n    ",Object(s.b)("span",{parentName:"code",className:"token comment"},"//右边的数组大小"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," rightArr ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," Array",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"from"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token function"},"Array"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token constant"},"R")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"-")," ",Object(s.b)("span",{parentName:"code",className:"token constant"},"M")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"+")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"1"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token parameter"},"v",Object(s.b)("span",{parentName:"span",className:"token punctuation"},",")," k"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=>")," k",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n    ",Object(s.b)("span",{parentName:"code",className:"token comment"},"//往这两个数组填充数据"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"for")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," i ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token constant"},"L"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," i ",Object(s.b)("span",{parentName:"code",className:"token operator"},"<")," ",Object(s.b)("span",{parentName:"code",className:"token constant"},"M"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," i",Object(s.b)("span",{parentName:"code",className:"token operator"},"++"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n        leftArr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"i ",Object(s.b)("span",{parentName:"code",className:"token operator"},"-")," ",Object(s.b)("span",{parentName:"code",className:"token constant"},"L"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"i",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"for")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," i ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token constant"},"M"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," i ",Object(s.b)("span",{parentName:"code",className:"token operator"},"<=")," ",Object(s.b)("span",{parentName:"code",className:"token constant"},"R"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," i",Object(s.b)("span",{parentName:"code",className:"token operator"},"++"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n        rightArr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"i ",Object(s.b)("span",{parentName:"code",className:"token operator"},"-")," ",Object(s.b)("span",{parentName:"code",className:"token constant"},"M"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"i",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," i ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},","),"\n        j ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// arr数组的第一个元素"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," k ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token constant"},"L"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n    ",Object(s.b)("span",{parentName:"code",className:"token comment"},"//比较这两个数组的值，哪个小，就往数组上放"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"while")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"i ",Object(s.b)("span",{parentName:"code",className:"token operator"},"<")," leftArr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),"length ",Object(s.b)("span",{parentName:"code",className:"token operator"},"&&")," j ",Object(s.b)("span",{parentName:"code",className:"token operator"},"<")," rightArr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),"length",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token comment"},"//谁比较小，谁将元素放入大数组中,移动指针，继续比较下一个"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"leftArr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"i",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"<")," rightArr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"j",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n            arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"k",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," leftArr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"i",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n            i",Object(s.b)("span",{parentName:"code",className:"token operator"},"++"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n            k",Object(s.b)("span",{parentName:"code",className:"token operator"},"++"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}")," ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"else")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n            arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"k",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," rightArr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"j",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n            j",Object(s.b)("span",{parentName:"code",className:"token operator"},"++"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n            k",Object(s.b)("span",{parentName:"code",className:"token operator"},"++"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n    ",Object(s.b)("span",{parentName:"code",className:"token comment"},"//如果左边的数组还没比较完，右边的数都已经完了，那么将左边的数抄到大数组中(剩下的都是大数字)"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"while")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"i ",Object(s.b)("span",{parentName:"code",className:"token operator"},"<")," leftArr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),"length",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n        arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"k",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," leftArr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"i",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n        i",Object(s.b)("span",{parentName:"code",className:"token operator"},"++"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n        k",Object(s.b)("span",{parentName:"code",className:"token operator"},"++"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token comment"},"//如果右边的数组还没比较完，左边的数都已经完了，那么将右边的数抄到大数组中(剩下的都是大数字)"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"while")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"j ",Object(s.b)("span",{parentName:"code",className:"token operator"},"<")," rightArr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),"length",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n        arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"k",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," rightArr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"j",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n        k",Object(s.b)("span",{parentName:"code",className:"token operator"},"++"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n        j",Object(s.b)("span",{parentName:"code",className:"token operator"},"++"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n",Object(s.b)("span",{parentName:"code",className:"token comment"},"// var c = [5, 8, 4, 7, 1, 9, 2, 6];"),"\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"var")," c ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token number"},"9"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"2"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"5"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"1"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"3"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"2"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"9"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"5"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"2"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"1"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"8"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"1"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"2"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"3"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"11"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"mergeSort"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"c",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")))),Object(s.b)("h2",{className:"__internal",id:"7-堆排序"},"7. 堆排序",Object(s.b)("a",{parentName:"h2",href:"#7-%E5%A0%86%E6%8E%92%E5%BA%8F","aria-hidden":!0,className:"anchor"},"#")),Object(s.b)(u,{title:"冒泡排序",src:"/images/sf/堆排序.gif",mdxType:"ImageWrap"}),Object(s.b)("p",null,"思路："),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul",className:"__internal"},"堆排序使用到了完全二叉树的一个特性，根节点比左孩子和右孩子都要大，完成",Object(s.b)("strong",{parentName:"li"},"一次建堆"),"的操作实质上是比较根节点和左孩子、右孩子的大小，大的交换到根节点上，",Object(s.b)("strong",{parentName:"li"},"直至最大的节点在树顶")),Object(s.b)("li",{parentName:"ul",className:"__internal"},"随后与数组最后一位元素进行交换")),Object(s.b)("p",null,"要点:"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul",className:"__internal"},"只要左子树或右子树大于当前根节点，则替换。替换后会导致下面的子树发生了变化，因此同样需要进行比较，直至各个节点实现父>子这么一个条件")),Object(s.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},Object(s.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(s.b)("span",{parentName:"code",className:"token function"},"heapifySort"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token parameter"},"arr"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," len ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),"length",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"for")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," i ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," i ",Object(s.b)("span",{parentName:"code",className:"token operator"},"<")," len",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," i",Object(s.b)("span",{parentName:"code",className:"token operator"},"++"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token comment"},"//每完成一次建堆就可以排除一个元素了"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token function"},"maxHeapify"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," len ",Object(s.b)("span",{parentName:"code",className:"token operator"},"-")," i",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token comment"},"//交换"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token number"},"0"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"len ",Object(s.b)("span",{parentName:"code",className:"token operator"},"-")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"1")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"-")," i",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"len ",Object(s.b)("span",{parentName:"code",className:"token operator"},"-")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"1")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"-")," i",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token number"},"0"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"return")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n",Object(s.b)("span",{parentName:"code",className:"token comment"},"/**\n * 完成一次建堆，最大值在堆的顶部(根节点)\n */"),"\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(s.b)("span",{parentName:"code",className:"token function"},"maxHeapify"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token parameter"},"arr",Object(s.b)("span",{parentName:"span",className:"token punctuation"},",")," size"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"for")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," i ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," size ",Object(s.b)("span",{parentName:"code",className:"token operator"},"-")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"1"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," i ",Object(s.b)("span",{parentName:"code",className:"token operator"},">=")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," i",Object(s.b)("span",{parentName:"code",className:"token operator"},"--"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token function"},"heapify"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," i",Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," size",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n",Object(s.b)("span",{parentName:"code",className:"token comment"},"/**\n * 建堆\n *\n * @param arr          看作是完全二叉树\n * @param currentRootNode 当前父节点位置\n * @param size            节点总数\n */"),"\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(s.b)("span",{parentName:"code",className:"token function"},"heapify"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token parameter"},"arr",Object(s.b)("span",{parentName:"span",className:"token punctuation"},",")," currentRootNode",Object(s.b)("span",{parentName:"span",className:"token punctuation"},",")," size"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"currentRootNode ",Object(s.b)("span",{parentName:"code",className:"token operator"},"<")," size",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token comment"},"//左子树和右字数的位置"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," left ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"2")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"*")," currentRootNode ",Object(s.b)("span",{parentName:"code",className:"token operator"},"+")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"1"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," right ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"2")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"*")," currentRootNode ",Object(s.b)("span",{parentName:"code",className:"token operator"},"+")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"2"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n        ",Object(s.b)("span",{parentName:"code",className:"token comment"},"//把当前父节点位置看成是最大的"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," max ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," currentRootNode",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n        ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"left ",Object(s.b)("span",{parentName:"code",className:"token operator"},"<")," size",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n            ",Object(s.b)("span",{parentName:"code",className:"token comment"},"//如果比当前根元素要大，记录它的位置"),"\n            ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"max",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"<")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"left",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n                max ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," left",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n            ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"right ",Object(s.b)("span",{parentName:"code",className:"token operator"},"<")," size",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n            ",Object(s.b)("span",{parentName:"code",className:"token comment"},"//如果比当前根元素要大，记录它的位置"),"\n            ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"max",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"<")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"right",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n                max ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," right",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n            ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token comment"},"//如果最大的不是根元素位置，那么就交换"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"max ",Object(s.b)("span",{parentName:"code",className:"token operator"},"!=")," currentRootNode",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n            ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," temp ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"max",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n            arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"max",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"currentRootNode",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n            arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"currentRootNode",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," temp",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n            ",Object(s.b)("span",{parentName:"code",className:"token comment"},"//继续比较，直到完成一次建堆"),"\n            ",Object(s.b)("span",{parentName:"code",className:"token function"},"heapify"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," max",Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," size",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}")))),Object(s.b)("h2",{className:"__internal",id:"8-计数排序"},"8. 计数排序",Object(s.b)("a",{parentName:"h2",href:"#8-%E8%AE%A1%E6%95%B0%E6%8E%92%E5%BA%8F","aria-hidden":!0,className:"anchor"},"#")),Object(s.b)(u,{title:"冒泡排序",src:"/images/sf/计数排序.gif",mdxType:"ImageWrap"}),Object(s.b)("p",null,"思路："),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul",className:"__internal"},"把所的数据放在一个数组里面依次排序,最后按数组位数依次统计")),Object(s.b)("p",null,"要点:"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul",className:"__internal"},"获取最小值 min 和最大值 max"),Object(s.b)("li",{parentName:"ul",className:"__internal"},"开辟一块新的空间创建新的数组 B，长度为 ( max - min + 1)"),Object(s.b)("li",{parentName:"ul",className:"__internal"},"数组 B 中 index 的元素记录的值是 A 中某元素出现的次数"),Object(s.b)("li",{parentName:"ul",className:"__internal"},"最后输出目标整数序列，具体的逻辑是遍历数组 B，输出相应元素以及对应的个数")),Object(s.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},Object(s.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(s.b)("span",{parentName:"code",className:"token function"},"countingSort"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token parameter"},"arr"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," maxValue ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token function"},"getMaxValue"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," bucketLen ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," maxValue ",Object(s.b)("span",{parentName:"code",className:"token operator"},"+")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"1"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 创建统计数组"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," bucket ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," Array",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"from"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token function"},"Array"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"bucketLen",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token parameter"},"v",Object(s.b)("span",{parentName:"span",className:"token punctuation"},",")," k"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=>")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n    ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 统计 每个位数存的数据量"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"for")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," i ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," i ",Object(s.b)("span",{parentName:"code",className:"token operator"},"<")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),"length",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," i",Object(s.b)("span",{parentName:"code",className:"token operator"},"++"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n        bucket",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"i",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," bucket",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"i",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"+")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"1"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," sortedIndex ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 依次取出放到数组里面"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"for")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," j ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," j ",Object(s.b)("span",{parentName:"code",className:"token operator"},"<")," bucketLen",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," j",Object(s.b)("span",{parentName:"code",className:"token operator"},"++"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"while")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"bucket",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"j",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},">")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n            arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"sortedIndex",Object(s.b)("span",{parentName:"code",className:"token operator"},"++"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," j",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n            bucket",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"j",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token operator"},"--"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"return")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(s.b)("span",{parentName:"code",className:"token function"},"getMaxValue"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token parameter"},"arr"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," maxValue ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token number"},"0"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 找出最大值"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"for")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," i ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," i ",Object(s.b)("span",{parentName:"code",className:"token operator"},"<")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),"length",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," i",Object(s.b)("span",{parentName:"code",className:"token operator"},"++"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"maxValue ",Object(s.b)("span",{parentName:"code",className:"token operator"},"<")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"i",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n            maxValue ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"i",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"return")," maxValue",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}")))),Object(s.b)("h2",{className:"__internal",id:"9-桶排序"},"9. 桶排序",Object(s.b)("a",{parentName:"h2",href:"#9-%E6%A1%B6%E6%8E%92%E5%BA%8F","aria-hidden":!0,className:"anchor"},"#")),Object(s.b)(u,{title:"冒泡排序",src:"/images/sf/桶排序.gif",mdxType:"ImageWrap"}),Object(s.b)("p",null,"思路："),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul",className:"__internal"},"找出数组当中最大值与最小值,计算中间差，指定桶数","[max-min + 1]"," / num = diff")),Object(s.b)("p",null,"要点:"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul",className:"__internal"},"设置固定数量的空桶。"),Object(s.b)("li",{parentName:"ul",className:"__internal"},"把数据放到对应的桶中。"),Object(s.b)("li",{parentName:"ul",className:"__internal"},"对每个不为空的桶中数据进行排序。"),Object(s.b)("li",{parentName:"ul",className:"__internal"},"拼接不为空的桶中数据，得到结果")),Object(s.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},Object(s.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(s.b)("span",{parentName:"code",className:"token function"},"bucketSort"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token parameter"},"arr",Object(s.b)("span",{parentName:"span",className:"token punctuation"},",")," bucketSize ",Object(s.b)("span",{parentName:"span",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"span",className:"token number"},"5")),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," len ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),"length",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"len ",Object(s.b)("span",{parentName:"code",className:"token operator"},"==")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"return")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," minValue ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token number"},"0"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," maxValue ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token number"},"0"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n    ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 找出最大与最小"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"for")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," i ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," i ",Object(s.b)("span",{parentName:"code",className:"token operator"},"<")," len",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," i",Object(s.b)("span",{parentName:"code",className:"token operator"},"++"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"const")," value ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"i",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"value ",Object(s.b)("span",{parentName:"code",className:"token operator"},"<")," minValue",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n            minValue ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," value",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}")," ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"else")," ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"value ",Object(s.b)("span",{parentName:"code",className:"token operator"},">")," maxValue",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n            maxValue ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," value",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 计算"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," bucketCount ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," Math",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"floor"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"maxValue ",Object(s.b)("span",{parentName:"code",className:"token operator"},"-")," minValue",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"/")," bucketSize",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"+")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"1"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," buckets ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," Array",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"from"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token function"},"Array"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"bucketCount",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=>")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n    ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 利用映射函数将数据分配到各个桶中"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"for")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," i ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," i ",Object(s.b)("span",{parentName:"code",className:"token operator"},"<")," len",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," i",Object(s.b)("span",{parentName:"code",className:"token operator"},"++"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," index ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," Math",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"floor"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"i",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"-")," minValue",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"/")," bucketSize",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n        buckets",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"index",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token operator"},"..."),"buckets",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"index",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"i",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," arrIndex ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"for")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," i ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," i ",Object(s.b)("span",{parentName:"code",className:"token operator"},"<")," buckets",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),"length",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," i",Object(s.b)("span",{parentName:"code",className:"token operator"},"++"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," bucket ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," buckets",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"i",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"bucket",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),"length ",Object(s.b)("span",{parentName:"code",className:"token operator"},"<=")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n            ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"continue"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 对每个桶进行排序，这里使用了插入排序"),"\n        bucket ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," bucket",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"sort"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token parameter"},"a",Object(s.b)("span",{parentName:"span",className:"token punctuation"},",")," b"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=>")," a ",Object(s.b)("span",{parentName:"code",className:"token operator"},"-")," b",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"for")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," j ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," j ",Object(s.b)("span",{parentName:"code",className:"token operator"},"<")," bucket",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),"length",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," j",Object(s.b)("span",{parentName:"code",className:"token operator"},"++"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n            arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"arrIndex",Object(s.b)("span",{parentName:"code",className:"token operator"},"++"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," bucket",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"j",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"return")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}")))),Object(s.b)("h2",{className:"__internal",id:"10基数排序"},"10.基数排序",Object(s.b)("a",{parentName:"h2",href:"#10%E5%9F%BA%E6%95%B0%E6%8E%92%E5%BA%8F","aria-hidden":!0,className:"anchor"},"#")),Object(s.b)(u,{title:"冒泡排序",src:"/images/sf/基数排序.gif",mdxType:"ImageWrap"}),Object(s.b)("p",null,"思路: 按某位按 0-9 的顺序排,先排个位、十位、百分位。。。,依次类排"),Object(s.b)("p",null,"要点:"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul",className:"__internal"},Object(s.b)("p",{parentName:"li"},"将所有待比较数值（正整数）统一为同样的数位长度，数位较短的数前面补零")),Object(s.b)("li",{parentName:"ul",className:"__internal"},Object(s.b)("p",{parentName:"li"},"从最低位开始，依次进行一次排序")),Object(s.b)("li",{parentName:"ul",className:"__internal"},Object(s.b)("p",{parentName:"li"},"从最低位排序一直到最高位排序完成以后, 数列就变成一个有序序列"))),Object(s.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},Object(s.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(s.b)("span",{parentName:"code",className:"token function"},"radixSort"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token parameter"},"arr"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," len ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),"length",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"len ",Object(s.b)("span",{parentName:"code",className:"token operator"},"==")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"return")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," maxDigit ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token function"},"getMaxDigit"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," mod ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"10"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 基础的模"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," p ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"1"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"for")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," i ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," i ",Object(s.b)("span",{parentName:"code",className:"token operator"},"<")," maxDigit",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," i",Object(s.b)("span",{parentName:"code",className:"token operator"},"++"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," p ",Object(s.b)("span",{parentName:"code",className:"token operator"},"*=")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"10"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," mod ",Object(s.b)("span",{parentName:"code",className:"token operator"},"*=")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"10"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 考虑负数的情况，这里扩展一倍队列数，其中 [0-9]对应负数，[10-19]对应正数 (bucket + 10)"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," counter ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," Array",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"from"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token function"},"Array"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"mod ",Object(s.b)("span",{parentName:"code",className:"token operator"},"*")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"2"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=>")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"for")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," j ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," j ",Object(s.b)("span",{parentName:"code",className:"token operator"},"<")," len",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," j",Object(s.b)("span",{parentName:"code",className:"token operator"},"++"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n            ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," bucket ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," Math",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"floor"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"j",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"%")," mod",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"/")," p",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"+")," mod",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n            console",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"log"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},'"bucket"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," bucket",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n            counter",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"bucket",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token operator"},"..."),"counter",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"bucket",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"j",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," pos ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"for")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token keyword"},"const")," item ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"of")," counter",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n            ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"for")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token keyword"},"const")," value ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"of")," item",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n                arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"pos",Object(s.b)("span",{parentName:"code",className:"token operator"},"++"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," value",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n            ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"return")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 获取最高位数"),"\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(s.b)("span",{parentName:"code",className:"token function"},"getMaxDigit"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token parameter"},"arr"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," maxValue ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token function"},"getMaxValue"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"return")," maxValue",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"toString"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),"length",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 获取数组里面最大一个"),"\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(s.b)("span",{parentName:"code",className:"token function"},"getMaxValue"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token parameter"},"arr"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," maxValue ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token number"},"0"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"for")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token keyword"},"const")," value ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"of")," arr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"maxValue ",Object(s.b)("span",{parentName:"code",className:"token operator"},"<")," value",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n            maxValue ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," value",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"return")," maxValue",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}")))))}j.isMDXComponent=!0,j=Object(c.hot)(e)(j),(b="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default:void 0)&&(b.register(r,"makeShortcode","E:\\h-project\\my-blog\\docs\\notes\\18.md"),b.register(l,"Footer","E:\\h-project\\my-blog\\docs\\notes\\18.md"),b.register(u,"ImageWrap","E:\\h-project\\my-blog\\docs\\notes\\18.md"),b.register(d,"layoutProps","E:\\h-project\\my-blog\\docs\\notes\\18.md"),b.register("wrapper","MDXLayout","E:\\h-project\\my-blog\\docs\\notes\\18.md"),b.register(j,"MDXContent","E:\\h-project\\my-blog\\docs\\notes\\18.md")),(N="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.leaveModule:void 0)&&N(e)}.call(this,n(4)(e))}}]);