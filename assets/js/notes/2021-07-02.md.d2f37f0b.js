(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{327:function(e,a,n){"use strict";n.r(a),function(e){n.d(a,"default",(function(){return d}));var t,c=n(108),s=(n(306),n(0),n(109)),o=["components"];function p(){return(p=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var n=arguments[a];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])}return e}).apply(this,arguments)}function m(e,a){if(null==e)return{};var n,t,c=function(e,a){if(null==e)return{};var n,t,c={},s=Object.keys(e);for(t=0;t<s.length;t++)n=s[t],a.indexOf(n)>=0||(c[n]=e[n]);return c}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)n=s[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(c[n]=e[n])}return c}(t="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.enterModule:void 0)&&t(e);"undefined"!=typeof reactHotLoaderGlobal&&reactHotLoaderGlobal.default.signature;var b,N,r=function(e){return function(a){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(s.b)("div",a)}},l=r("Footer"),u={};function d(e){var a=e.components,n=m(e,o);return Object(s.b)("wrapper",p({},u,n,{components:a,mdxType:"MDXLayout"}),Object(s.b)("blockquote",null,Object(s.b)(l,{mdxType:"Footer"})),Object(s.b)("h1",{className:"__internal",id:"9基本数据类型"},"9.基本数据类型",Object(s.b)("a",{parentName:"h1",href:"#9%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B","aria-hidden":!0,className:"anchor"},"#")),Object(s.b)("blockquote",null,Object(s.b)("p",{parentName:"blockquote"},"前言，我们常说的 ",Object(s.b)("inlineCode",{parentName:"p"},"js")," , 是由于 ",Object(s.b)("inlineCode",{parentName:"p"},"ECMAScript"),", ",Object(s.b)("inlineCode",{parentName:"p"},"BOM"),", ",Object(s.b)("inlineCode",{parentName:"p"},"DOM"),",这三个部分组成的。今天我们主要介绍的是",Object(s.b)("inlineCode",{parentName:"p"},"ECMAScript"),"当中的基本数据类型\n众所周知在我们的 ",Object(s.b)("inlineCode",{parentName:"p"},"ECMAScript")," 中有",Object(s.b)("strong",{parentName:"p"},"6"),"种简单的数据类型：")),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul",className:"__internal"},Object(s.b)("inlineCode",{parentName:"li"},"Undefined")),Object(s.b)("li",{parentName:"ul",className:"__internal"},Object(s.b)("inlineCode",{parentName:"li"},"Null")),Object(s.b)("li",{parentName:"ul",className:"__internal"},Object(s.b)("inlineCode",{parentName:"li"},"Boolean")),Object(s.b)("li",{parentName:"ul",className:"__internal"},Object(s.b)("inlineCode",{parentName:"li"},"Number")),Object(s.b)("li",{parentName:"ul",className:"__internal"},Object(s.b)("inlineCode",{parentName:"li"},"String")),Object(s.b)("li",{parentName:"ul",className:"__internal"},Object(s.b)("inlineCode",{parentName:"li"},"Symbol (ECMAScript 6 新定义)"))),Object(s.b)("blockquote",null,Object(s.b)("p",{parentName:"blockquote"},"当然后还我们的复杂数据类型 ",Object(s.b)("inlineCode",{parentName:"p"},"Object（Array,Date,RegExp, Function）"),"或是叫做引用类型 ,它的本质是由一组无序的名值对组成的，可以这么说在 ",Object(s.b)("inlineCode",{parentName:"p"},"ECMAScript")," 当中所的值最终都会被以上的",Object(s.b)("strong",{parentName:"p"},"7"),"种数据类型来表示,")),Object(s.b)("hr",null),Object(s.b)("h2",{className:"__internal",id:"undefined-与-null-类型"},"Undefined 与 Null 类型",Object(s.b)("a",{parentName:"h2",href:"#undefined-%E4%B8%8E-null-%E7%B1%BB%E5%9E%8B","aria-hidden":!0,className:"anchor"},"#")),Object(s.b)("p",null,Object(s.b)("inlineCode",{parentName:"p"},"Undefined")," 和 ",Object(s.b)("inlineCode",{parentName:"p"},"Null")," 两个都是只有",Object(s.b)("strong",{parentName:"p"},"一个值"),"的类型,",Object(s.b)("inlineCode",{parentName:"p"},"Null")," 表示一个空对象的指针，而我们的 ",Object(s.b)("inlineCode",{parentName:"p"},"Undefined")," 则是继承自 ",Object(s.b)("inlineCode",{parentName:"p"},"Null"),",有时我们可以说他们是等价的如下面的"),Object(s.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},Object(s.b)("span",{parentName:"code",className:"token keyword"},"var")," msg",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\nconsole",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"log"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"msg ",Object(s.b)("span",{parentName:"code",className:"token operator"},"==")," ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"undefined"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"  ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// true"),"\nconsole",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"log"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"msg ",Object(s.b)("span",{parentName:"code",className:"token operator"},"==")," ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"null"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"  ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// true"),"\nconsole",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"log"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token keyword"},"undefined")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"==")," ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"null"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"  ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// true"),"\nconsole",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"log"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token keyword"},"undefined")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"===")," ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"null"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"  ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// false")))),Object(s.b)("p",null,"它们的不同处在于,",Object(s.b)("inlineCode",{parentName:"p"},"Undefined"),'表示是一个表示"无"的原始值或者说表示"缺少值"，就是此处应该有一个值，但是还没有定义。当尝试读取时会返回 ',Object(s.b)("inlineCode",{parentName:"p"},"undefined"),",例如变量被声明了，但没有赋值时，就等于",Object(s.b)("inlineCode",{parentName:"p"},"undefined"),"。,而我们的",Object(s.b)("inlineCode",{parentName:"p"},"Null"),"表示这东西压根都没存在，是一个对象(",Object(s.b)("strong",{parentName:"p"},"空对象"),", 没有任何属性和方法),所以就会下面的情况:"),Object(s.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},Object(s.b)("span",{parentName:"code",className:"token keyword"},"var")," a",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\nconsole",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"log"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"a",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// undefined"),"\nconsole",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"log"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"b",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 报错了")))),Object(s.b)("p",null,"我们在来看下面的"),Object(s.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},Object(s.b)("span",{parentName:"code",className:"token keyword"},"var")," a",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\nconsole",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"log"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token keyword"},"typeof")," a",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// undefined"),"\nconsole",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"log"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token keyword"},"typeof")," b",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// undefined"),"\n\nconsole",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"log"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token keyword"},"delete")," a",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// false"),"\nconsole",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"log"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token keyword"},"delete")," b",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// true"),"\n\nconsole",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"log"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token keyword"},"typeof")," ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"null")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"==")," ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"typeof")," ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"undefined"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// false"),"\n\n",Object(s.b)("span",{parentName:"code",className:"token function"},"Number"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token keyword"},"undefined"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// NaN"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"Number"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token keyword"},"null"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 0")))),Object(s.b)("p",null,"突然发现一个现象为啥这里又不报错了？这是因为在规定里面，对于尚未声明的变量，只能进行两种操作是合法的，就是用",Object(s.b)("inlineCode",{parentName:"p"},"typeof"),"操作符检测其数据的类型，当然你使用",Object(s.b)("inlineCode",{parentName:"p"},"delete"),"进行操作也是合法，但是使用",Object(s.b)("inlineCode",{parentName:"p"},"delete"),"操作并没有什么意思，本来都不存在嘛,而且在严格模式下使用",Object(s.b)("inlineCode",{parentName:"p"},"delete"),"是会报错的。特别注意",Object(s.b)("inlineCode",{parentName:"p"},"typeof null")," 得到的结果是一个",Object(s.b)("inlineCode",{parentName:"p"},"Object"),",而",Object(s.b)("inlineCode",{parentName:"p"},"typeof undefined"),"得到的结果是",Object(s.b)("inlineCode",{parentName:"p"},"undefined"),"。"),Object(s.b)("p",null,"而在我们平时使当中，我们没有必要把一个变量的值是显示的设置为",Object(s.b)("inlineCode",{parentName:"p"},"undefined"),",因为在声明这个变量的时候就自动为我们的隐式的设置值了。但是我们的",Object(s.b)("inlineCode",{parentName:"p"},"null"),"则只要是要保存的变量但是还没有真的保存下来的时候，我们应该明确的让该变量初始化的时候为",Object(s.b)("inlineCode",{parentName:"p"},"null")),Object(s.b)("hr",null),Object(s.b)("h2",{className:"__internal",id:"boolean类型"},"Boolean类型",Object(s.b)("a",{parentName:"h2",href:"#boolean%E7%B1%BB%E5%9E%8B","aria-hidden":!0,className:"anchor"},"#")),Object(s.b)("p",null,Object(s.b)("inlineCode",{parentName:"p"},"boolean"),"类型只存在两个值，",Object(s.b)("inlineCode",{parentName:"p"},"true"),"和",Object(s.b)("inlineCode",{parentName:"p"},"false"),"。"),Object(s.b)("blockquote",null,Object(s.b)("p",{parentName:"blockquote"},Object(s.b)("inlineCode",{parentName:"p"},"True"),"和",Object(s.b)("inlineCode",{parentName:"p"},"False"),"这个大写的并不是我们的",Object(s.b)("inlineCode",{parentName:"p"},"boolean"),"值,只是标识符。"),Object(s.b)("div",{parentName:"blockquote",className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},"console",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"log"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token function"},"Boolean"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},"''"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// false 非空字符串转的结果都为true"),"\nconsole",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"log"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token function"},"Boolean"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token number"},"0"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// false 任何非零数字包含无穷大都为true"),"\nconsole",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"log"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token function"},"Boolean"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token number"},"NaN"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// false"),"\nconsole",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"log"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token function"},"Boolean"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token keyword"},"null"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// false 别的对象都为true")))),Object(s.b)("hr",{parentName:"blockquote"})),Object(s.b)("h2",{className:"__internal",id:"number类型"},"Number类型",Object(s.b)("a",{parentName:"h2",href:"#number%E7%B1%BB%E5%9E%8B","aria-hidden":!0,className:"anchor"},"#")),Object(s.b)("p",null,"我们在",Object(s.b)("inlineCode",{parentName:"p"},"Number"),"这个类型的时候，我们先看一下下面的代码"),Object(s.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},"console",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"log"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token number"},"0.5")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"+")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0.15")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"==")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0.65"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// true"),"\nconsole",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"log"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token number"},"0.1")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"+")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0.2")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"==")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0.3"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// false")))),Object(s.b)("p",null,"为啥会出现上面的这种情况?，原来我们的",Object(s.b)("inlineCode",{parentName:"p"},"Number"),"类型使用的是",Object(s.b)("strong",{parentName:"p"},"IEEEF754"),"格式来表示整数各浮点数值，也可以叫做双精度数值。那什么是",Object(s.b)("strong",{parentName:"p"},"IEEEF754"),",在介绍它的时候我们先要了解",Object(s.b)("inlineCode",{parentName:"p"},"ECMAScript"),"中的对于一些极大或是极小数值，采用的是科学技术法,用",Object(s.b)("strong",{parentName:"p"},"e"),"表示法就是我们以前数学学的有幂指数,请看下面:"),Object(s.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},Object(s.b)("span",{parentName:"code",className:"token keyword"},"var")," num ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"3.125e7"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\nconsole",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"log"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"num",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 31250000"),"\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"var")," floatNum ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"3e-6"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\nconsole",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"log"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"floatNum",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 0.000003")))),Object(s.b)("p",null,"这里存在一个浮点数值的精度问题,它目前最开精度是17位小数,所在进行浮点数进行算术运算的时其精确度远不如整数,\n下面我们要来解释为什么()"),Object(s.b)("p",null,"先来看看",Object(s.b)("strong",{parentName:"p"},"IEEEF754"),"是怎么存数据的:\n",Object(s.b)("img",{parentName:"p",src:"https://user-gold-cdn.xitu.io/2018/5/3/16326af1c2a61e42?w=800&h=220&f=png&s=29436",alt:null})),Object(s.b)("p",null,"指数位可以通过下面的方法转换为使用的指数值：\n",Object(s.b)("img",{parentName:"p",src:"https://user-gold-cdn.xitu.io/2018/5/3/16326adbfa6b40b7?w=800&h=584&f=png&s=55838",alt:null})),Object(s.b)("p",null,"浮点数表示的值的形式由 e 和 f 确定：\n",Object(s.b)("img",{parentName:"p",src:"https://user-gold-cdn.xitu.io/2018/5/3/16326b008f7bacb8?w=800&h=202&f=png&s=14352",alt:null})),Object(s.b)("blockquote",null,Object(s.b)("p",{parentName:"blockquote"},"我们都知道所的代码都会转成二进制进行运算")),Object(s.b)("h5",{className:"__internal",id:"将-01-使用转换为二进制"},"将 0.1 使用转换为二进制",Object(s.b)("a",{parentName:"h5",href:"#%E5%B0%86-01-%E4%BD%BF%E7%94%A8%E8%BD%AC%E6%8D%A2%E4%B8%BA%E4%BA%8C%E8%BF%9B%E5%88%B6","aria-hidden":!0,className:"anchor"},"#")),Object(s.b)("p",null,Object(s.b)("img",{parentName:"p",src:"https://user-gold-cdn.xitu.io/2018/5/3/16326b61232da2c2?w=730&h=800&f=png&s=61398",alt:null})),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul",className:"__internal"},"我们就可以得到`",Object(s.b)("inlineCode",{parentName:"li"},"0.1与0.2"),"所表示的值\n",Object(s.b)("img",{parentName:"li",src:"https://user-gold-cdn.xitu.io/2018/5/3/16326b7e9a08a2d9?w=368&h=93&f=png&s=5698",alt:null})),Object(s.b)("li",{parentName:"ul",className:"__internal"},'由于小数位 f 仅储存 52bit, 储存时会将超出精度部分进行"零舍一入"')),Object(s.b)("table",null,Object(s.b)("thead",{parentName:"table"},Object(s.b)("tr",{parentName:"thead"},Object(s.b)("th",{parentName:"tr",align:"center"},"值类型"),Object(s.b)("th",{parentName:"tr",align:"center"},"小数位(储存范围内)"),Object(s.b)("th",{parentName:"tr",align:"center"},"小数位(储存范围外)"))),Object(s.b)("tbody",{parentName:"table"},Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",{parentName:"tr",align:"center"},"无限精确值"),Object(s.b)("td",{parentName:"tr",align:"center"},"1001 1001 1001 1001 1001 1001 1001 1001 1001 1001 1001 1001 1001"),Object(s.b)("td",{parentName:"tr",align:"center"},"1001 1001...")),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",{parentName:"tr",align:"center"},"实际储存值"),Object(s.b)("td",{parentName:"tr",align:"center"},"1001 1001 1001 1001 1001 1001 1001 1001 1001 1001 1001 1001 1010"),Object(s.b)("td",{parentName:"tr",align:"center"},"-")))),Object(s.b)("p",null,"由于计算加减时不会对指数位进行位运算，这里不计算指数位的表示，直接使用数字表示最终的指数值所以",Object(s.b)("inlineCode",{parentName:"p"},"0.1,0.2")," 的表示如下："),Object(s.b)("table",null,Object(s.b)("thead",{parentName:"table"},Object(s.b)("tr",{parentName:"thead"},Object(s.b)("th",{parentName:"tr",align:"center"},"浮点数数值"),Object(s.b)("th",{parentName:"tr",align:"center"},"符号位 ",Object(s.b)("strong",{parentName:"th"},"S")),Object(s.b)("th",{parentName:"tr",align:"center"},"指数值 E"),Object(s.b)("th",{parentName:"tr",align:"center"},"小数位 f"))),Object(s.b)("tbody",{parentName:"table"},Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",{parentName:"tr",align:"center"},"0.1"),Object(s.b)("td",{parentName:"tr",align:"center"},"0"),Object(s.b)("td",{parentName:"tr",align:"center"},"-4"),Object(s.b)("td",{parentName:"tr",align:"center"},"1001 1001 1001 1001 1001 1001 1001 1001 1001 1001 1001 1001 1010")),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",{parentName:"tr",align:"center"},"0.2"),Object(s.b)("td",{parentName:"tr",align:"center"},"0"),Object(s.b)("td",{parentName:"tr",align:"center"},"-3"),Object(s.b)("td",{parentName:"tr",align:"center"},"1001 1001 1001 1001 1001 1001 1001 1001 1001 1001 1001 1001 1010")))),Object(s.b)("p",null,"我们在计算浮点数相加时需要先进行“对位”，将较小的指数化为较大的指数，并将小数部分相应右移:\n?0.1→(−1)^0×2^{−3}×(0.11001100110011001100110011001100110011001100110011010)_2?\n?0.2→(−1)^0×2^{−3}×(1.1001100110011001100110011001100110011001100110011010)_2?\n",Object(s.b)("img",{parentName:"p",src:"https://user-gold-cdn.xitu.io/2018/5/4/16326c8e5dd03861?w=800&h=356&f=png&s=76639",alt:null}),"\n所以可以转换为:\n?0.1+0.2=(−1)^0×2^{−2}×(1.0011001100110011001100110011001100110011001100110100)_2?"),Object(s.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},Object(s.b)("span",{parentName:"code",className:"token number"},"0.1")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"+")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0.2")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"===")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token operator"},"-"),Object(s.b)("span",{parentName:"code",className:"token number"},"1"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token operator"},"**"),Object(s.b)("span",{parentName:"code",className:"token number"},"0")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"*")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"2"),Object(s.b)("span",{parentName:"code",className:"token operator"},"**"),Object(s.b)("span",{parentName:"code",className:"token operator"},"-"),Object(s.b)("span",{parentName:"code",className:"token number"},"2")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"*")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token number"},"0b10011001100110011001100110011001100110011001100110100")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"*")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"2"),Object(s.b)("span",{parentName:"code",className:"token operator"},"**"),Object(s.b)("span",{parentName:"code",className:"token operator"},"-"),Object(s.b)("span",{parentName:"code",className:"token number"},"52"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// true")))),Object(s.b)("h4",{className:"__internal",id:"补充说明"},"补充说明:",Object(s.b)("a",{parentName:"h4",href:"#%E8%A1%A5%E5%85%85%E8%AF%B4%E6%98%8E","aria-hidden":!0,className:"anchor"},"#")),Object(s.b)("ol",null,Object(s.b)("li",{parentName:"ol",className:"__internal"},Object(s.b)("p",{parentName:"li"},"数值范围"),Object(s.b)("p",{parentName:"li"},"由于我们的内存的限制,",Object(s.b)("inlineCode",{parentName:"p"},"ECMAScript"),"并不能保存世界上所有的数值，所以会存一个最小与最大的保存值,分别为",Object(s.b)("inlineCode",{parentName:"p"},"5e-324,  1.7976931348623157e+308"),",当然这两个数不查一下你是记不住的,所以",Object(s.b)("inlineCode",{parentName:"p"},"ECMAScript"),"为我们提供了常量",Object(s.b)("inlineCode",{parentName:"p"},"Number.MIN_VALUE, Number.MAX_VALUE"),",如果在某一次计算超过所谓的边界时则为自动转为",Object(s.b)("inlineCode",{parentName:"p"},"Infinity"),"与",Object(s.b)("inlineCode",{parentName:"p"},"-Infinity"),"就是我们的数学里常说正无穷与负无穷。我们可以使用",Object(s.b)("inlineCode",{parentName:"p"},"isFinite()"),"判断一个数是否为有穷。我们也可以通过常量",Object(s.b)("inlineCode",{parentName:"p"},"Number.POSITIVE_INFINITY"),"与",Object(s.b)("inlineCode",{parentName:"p"},"Number.NEGATIVE_INFINITY"),"直接得到我们的正与负无穷值。当然这个很少见，不过在进行一些极小数与极大数计算时，我们最好还是要做一个检测。")),Object(s.b)("li",{parentName:"ol",className:"__internal"},Object(s.b)("p",{parentName:"li"},"NaN"),Object(s.b)("p",{parentName:"li"},"首先",Object(s.b)("inlineCode",{parentName:"p"},"NaN"),"表示非数值的一个特殊的值,只要是用于本来应该返回一个操作数,结果并没有返回,这样就不会报错可以继续运行。我们刚开始学数据除法的时候我们数学老师就给我们说",Object(s.b)("inlineCode",{parentName:"p"},"0"),"不能做为除数。",Object(s.b)("inlineCode",{parentName:"p"},"ECMASCript"),"中，为避免除数为",Object(s.b)("inlineCode",{parentName:"p"},"0"),"会出错导致代码停止执行,规定任意数值除以",Object(s.b)("inlineCode",{parentName:"p"},"0"),"会返回",Object(s.b)("inlineCode",{parentName:"p"},"NaN"),",而不会影响代码的继续执行。而我们的",Object(s.b)("inlineCode",{parentName:"p"},"NaN"),"有两个特点:"),Object(s.b)("ol",{parentName:"li"},Object(s.b)("li",{parentName:"ol",className:"__internal"},"任何涉及到",Object(s.b)("inlineCode",{parentName:"li"},"NaN"),"操作的都会返回",Object(s.b)("inlineCode",{parentName:"li"},"NaN"),"。"),Object(s.b)("li",{parentName:"ol",className:"__internal"},Object(s.b)("inlineCode",{parentName:"li"},"NaN"),"与任意值都不相等,包括自身。")),Object(s.b)("p",{parentName:"li"},"我们可以使用",Object(s.b)("inlineCode",{parentName:"p"},"isNaN"),"来判断,",Object(s.b)("inlineCode",{parentName:"p"},"isNaN"),"这是一个好玩的方法,请看下面的代码:"),Object(s.b)("div",{parentName:"li",className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},Object(s.b)("span",{parentName:"code",className:"token function"},"isNaN"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token number"},"NaN"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// true"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"isNaN"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token number"},"111"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// false"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"isNaN"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},"'111'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// false"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"isNaN"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},"'00001111'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// false"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"isNaN"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},"'00001111a'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// true"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"isNaN"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},"'0x3f'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// false"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"isNaN"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},"'0x3j'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// true"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"isNaN"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},"'Number'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// true"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"isNaN"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"Number",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// true"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"isNaN"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token boolean"},"true"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// false"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"isNaN"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// false"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"isNaN"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// true"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"isNaN"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token keyword"},"null"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// false"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"isNaN"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token keyword"},"undefined"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// true")))),Object(s.b)("p",{parentName:"li"},"我们可以这么理解",Object(s.b)("inlineCode",{parentName:"p"},"isNaN"),"在接到一个值之后,会尝试将这个值转为数值，不是数值的值也会直接转换成数值如",Object(s.b)("inlineCode",{parentName:"p"},"'111'"),",而任何不能转换为数值的就是该方法就会返回一个",Object(s.b)("inlineCode",{parentName:"p"},"true"),",同样对我们的字符串在转成数值的时候也有一个有趣的现象,如",Object(s.b)("inlineCode",{parentName:"p"},"'0011'"),",会转 成",Object(s.b)("inlineCode",{parentName:"p"},"11"),",如果在是包含有效的十六进制的数也会转成对应的十进制数。"),Object(s.b)("p",{parentName:"li"},"但你又会发现一个奇怪的事情关于我们复杂类型就是引用类型",Object(s.b)("inlineCode",{parentName:"p"},"Object"),"当中的",Object(s.b)("inlineCode",{parentName:"p"},"[]"),"与",Object(s.b)("inlineCode",{parentName:"p"},"{}"),"得到的结果居然不一样,不都是对象类型嘛,怎么会出这样的问题,这里面就是涉及到对象当中的",Object(s.b)("inlineCode",{parentName:"p"},"valueOf()与toString()"),"方法,在对对象进行判断时先调用",Object(s.b)("inlineCode",{parentName:"p"},"valueOf()"),"方法，判断该值是否可以转换为数值,不能刚调用",Object(s.b)("inlineCode",{parentName:"p"},"toString()"),"方法,在来判断值是否为数值。"),Object(s.b)("div",{parentName:"li",className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"toString"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// ''"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"toString"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},'// "[object Object]"'))))),Object(s.b)("li",{parentName:"ol",className:"__internal"},Object(s.b)("p",{parentName:"li"},"数值进制"),Object(s.b)("p",{parentName:"li"},"请看下面代码所示:"),Object(s.b)("div",{parentName:"li",className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},Object(s.b)("span",{parentName:"code",className:"token keyword"},"var")," intNum ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"63"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 十进制 63"),"\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"var")," baNum ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"077"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 八进制 63"),"\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"var")," slNum ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0x3f"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 十六进制 63")))),Object(s.b)("p",{parentName:"li"},"不过在进行算数运算的时候八进制与十六进制都会被转成十进制数值,注意，在严格模式下,八进制的写法会报错。")),Object(s.b)("li",{parentName:"ol",className:"__internal"},Object(s.b)("p",{parentName:"li"},"Number(), parseInt()与parseFloat()之间的相同与区别\n上面三个都可以实现类型转换为我们的Number类型,请看下面:"),Object(s.b)("div",{parentName:"li",className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},Object(s.b)("span",{parentName:"code",className:"token function"},"Number"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token keyword"},"null"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 0"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"parseInt"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token keyword"},"null"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// NaN"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"Number"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},"''"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 0"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"parseInt"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},"''"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// NaN"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"Number"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},"'1234true'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// NaN"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"parseInt"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},"'1234true'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 1234"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"parseInt"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},"'01234true'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 1234"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"parseInt"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},"'63'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 63;"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"parseInt"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},"'077'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 77; 注意在`ECMAScript3`当中会当做八制处理 结果为63"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"parseInt"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},"'0x3f'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 63"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"parseInt"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},"'63.22'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 63"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"parseFloat"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token keyword"},"null"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// NaN"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"parseFloat"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},"'63.22'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 63.22")))),Object(s.b)("p",{parentName:"li"},"通过上面的例子我们可以看出使用'Number()'来转换数值并不理想，达不到我们预期,我们的'parseInt()'与'parseFloat()'两个方法一个是解析为整数一个解析为浮点数。",Object(s.b)("inlineCode",{parentName:"p"},"parseInt()"),"第二个方法是为解析的基数就是我们是按十进制、二进制、八进制、十 六进制来解析如下:"),Object(s.b)("div",{parentName:"li",className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},Object(s.b)("span",{parentName:"code",className:"token function"},"parseInt"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},"'0xAF'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"16"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 175"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"parseInt"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},"'AF'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"16"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 175"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"parseInt"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},"'AF'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// NaN"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"parseInt"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},"'100'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},","),Object(s.b)("span",{parentName:"code",className:"token number"},"2"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 4"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"parseInt"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},"'100'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},","),Object(s.b)("span",{parentName:"code",className:"token number"},"8"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 64"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"parseInt"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},"'100'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},","),Object(s.b)("span",{parentName:"code",className:"token number"},"10"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 100"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"parseInt"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},"'100'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},","),Object(s.b)("span",{parentName:"code",className:"token number"},"16"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 256")))),Object(s.b)("p",{parentName:"li"},Object(s.b)("inlineCode",{parentName:"p"},"parseInt()"),"默认使用是的十进制,而",Object(s.b)("inlineCode",{parentName:"p"},"parseFloat()"),"方法没有第二个参数，只会按十进制来解析，所以在解析我们的十六进制的时候会解析成为",Object(s.b)("inlineCode",{parentName:"p"},"0"),"。如果小数点为",Object(s.b)("inlineCode",{parentName:"p"},"0"),"或是没有小数点则转为整型。"),Object(s.b)("div",{parentName:"li",className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},Object(s.b)("span",{parentName:"code",className:"token function"},"parseFloat"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},"'1234.00true'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 1234"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"parseFloat"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},"'01234.33.33true'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),Object(s.b)("span",{parentName:"code",className:"token comment"},"// 1234.33;"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"parseFloat"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},"'0xAF'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 0"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"parseFloat"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},"'1.234e7'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 12340000"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"parseFloat"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},"'1.234e-7'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 1.234e-7")))))),Object(s.b)("hr",null),Object(s.b)("h2",{className:"__internal",id:"string类型"},"String类型",Object(s.b)("a",{parentName:"h2",href:"#string%E7%B1%BB%E5%9E%8B","aria-hidden":!0,className:"anchor"},"#")),Object(s.b)("p",null,"字符串类型也是我们常用的一些类型,在",Object(s.b)("inlineCode",{parentName:"p"},"ECMAScript"),"中的字符串是不可变，也就是说一个字符串一但被创建，它的值就是不能改变的。如是要改变某一个变量保存的字符串，首先要销毁原来的字符串，然后用另外一个包含新值的字符串去填充该变量。"),Object(s.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},Object(s.b)("span",{parentName:"code",className:"token keyword"},"var")," str  ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token string"},"'ECMA'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\nstr ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," str ",Object(s.b)("span",{parentName:"code",className:"token operator"},"+")," ",Object(s.b)("span",{parentName:"code",className:"token string"},"'Script'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")))),Object(s.b)("p",null,"这上面这第二行代码实际的操作过程是:"),Object(s.b)("ol",null,Object(s.b)("li",{parentName:"ol",className:"__internal"},"创建一个能容纳10个字符的新字符串"),Object(s.b)("li",{parentName:"ol",className:"__internal"},"在创建的新的字符串中填充",Object(s.b)("inlineCode",{parentName:"li"},"ECMA"),"和",Object(s.b)("inlineCode",{parentName:"li"},"Script")),Object(s.b)("li",{parentName:"ol",className:"__internal"},"销毁原来的字符串",Object(s.b)("inlineCode",{parentName:"li"},"ECMA"),"和",Object(s.b)("inlineCode",{parentName:"li"},"Script"))),Object(s.b)("p",null,"在转换为字符串的时候都会调用到",Object(s.b)("inlineCode",{parentName:"p"},"toString()"),"方法,该方法可以接收一个参数，用于输出数值的基数"),Object(s.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},Object(s.b)("span",{parentName:"code",className:"token keyword"},"var")," num ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"100"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\nnum",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"toString"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},'// "100"'),"\nnum",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"tostring"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token number"},"2"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},'// "1100100"'),"\nnum",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"tostring"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token number"},"8"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},'// "144"'),"\nnum",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"tostring"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token number"},"10"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},'// "100"'),"\nnum",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"tostring"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token number"},"16"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},'// "64"')))),Object(s.b)("p",null,"注意，我们的",Object(s.b)("inlineCode",{parentName:"p"},"null"),"与",Object(s.b)("inlineCode",{parentName:"p"},"undefined"),"是没有",Object(s.b)("inlineCode",{parentName:"p"},"toString()"),",在我们不知道是否为",Object(s.b)("inlineCode",{parentName:"p"},"null或undefined"),"的时候，我们可以使用",Object(s.b)("inlineCode",{parentName:"p"},"String()"),"如下:"),Object(s.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},Object(s.b)("span",{parentName:"code",className:"token keyword"},"var")," num1",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"String"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token number"},"10"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},'// "10"'),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"String"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token boolean"},"true"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},'// "true"'),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"String"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token keyword"},"null"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},'// "null"'),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"String"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"num1",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},'// "undefined"')))),Object(s.b)("p",null,"留一思考题后面我在讲解",Object(s.b)("inlineCode",{parentName:"p"},"Object类型"),"可以找到解释:"),Object(s.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},Object(s.b)("span",{parentName:"code",className:"token keyword"},"var")," str1 ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token string"},'"string"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\nstr1",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),"color ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token string"},'"red"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\nconsole",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"log"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"str1",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),"color",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// undefined"),"\n\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"var")," str2 ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(s.b)("span",{parentName:"code",className:"token class-name"},"String"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},'"string"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\nstr2",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),"color ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token string"},'"red"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\nconsole",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"log"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"str2",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),"color",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// red")))),Object(s.b)("hr",null),Object(s.b)("h2",{className:"__internal",id:"symbol类型"},"Symbol类型",Object(s.b)("a",{parentName:"h2",href:"#symbol%E7%B1%BB%E5%9E%8B","aria-hidden":!0,className:"anchor"},"#")),Object(s.b)("p",null,"   ",Object(s.b)("inlineCode",{parentName:"p"},"Symbol"),"是我们",Object(s.b)("inlineCode",{parentName:"p"},"ECMAScript5"),"中新增加的一个类型,字面的意思就是唯一,独一无二的,在声明",Object(s.b)("inlineCode",{parentName:"p"},"Symbol"),"类型是使用",Object(s.b)("inlineCode",{parentName:"p"},"Symbol()"),",记住不能带",Object(s.b)("inlineCode",{parentName:"p"},"new")),Object(s.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},Object(s.b)("span",{parentName:"code",className:"token keyword"},"var")," a ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(s.b)("span",{parentName:"code",className:"token class-name"},"Symbol"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// error"),"\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"var")," b ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token function"},"Symbol"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")))),Object(s.b)("p",null,"   关于",Object(s.b)("inlineCode",{parentName:"p"},"Symbol"),"的详细介绍",Object(s.b)("a",{parentName:"p",href:"http://es6.ruanyifeng.com/#docs/symbol",target:"_blank"},"阮一峰老师的ES6")),Object(s.b)("p",null,"   我来简单的说一下关于它的使用,关于更多的使用请看上面的软老师的"),Object(s.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},Object(s.b)("span",{parentName:"code",className:"token keyword"},"var")," per1 ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    name",Object(s.b)("span",{parentName:"code",className:"token operator"},":")," ",Object(s.b)("span",{parentName:"code",className:"token string"},"'隔壁表哥'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},","),"\n    desc",Object(s.b)("span",{parentName:"code",className:"token operator"},":")," ",Object(s.b)("span",{parentName:"code",className:"token string"},"'能力很强'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},","),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"var")," per2 ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    desc",Object(s.b)("span",{parentName:"code",className:"token operator"},":")," ",Object(s.b)("span",{parentName:"code",className:"token string"},"'自我学习很好'"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\nconsole",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"log"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),Object(s.b)("span",{parentName:"code",className:"token operator"},"..."),"per1",Object(s.b)("span",{parentName:"code",className:"token punctuation"},","),Object(s.b)("span",{parentName:"code",className:"token operator"},"..."),"per2",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},'// {name: "隔壁表哥", desc: "自我学习很好"}'),"\n\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"var")," per1 ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    name",Object(s.b)("span",{parentName:"code",className:"token operator"},":")," ",Object(s.b)("span",{parentName:"code",className:"token string"},"'隔壁表哥'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},","),"\n    ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token function"},"Symbol"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},"'desc'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token operator"},":")," ",Object(s.b)("span",{parentName:"code",className:"token string"},"'能力很强'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},","),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"var")," per2 ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n     ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token function"},"Symbol"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},"'desc'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token operator"},":")," ",Object(s.b)("span",{parentName:"code",className:"token string"},"'自我学习很好'"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\nconsole",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"log"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),Object(s.b)("span",{parentName:"code",className:"token operator"},"..."),"per1",Object(s.b)("span",{parentName:"code",className:"token punctuation"},","),Object(s.b)("span",{parentName:"code",className:"token operator"},"..."),"per2",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},'// {name: "隔壁表哥", Symbol(desc): "能力很强", Symbol(desc): "自我学习很好"}'),"\n"))),Object(s.b)("hr",null),Object(s.b)("h2",{className:"__internal",id:"复杂引用object类型"},"复杂引用Object类型",Object(s.b)("a",{parentName:"h2",href:"#%E5%A4%8D%E6%9D%82%E5%BC%95%E7%94%A8object%E7%B1%BB%E5%9E%8B","aria-hidden":!0,className:"anchor"},"#")),Object(s.b)("p",null,"在",Object(s.b)("inlineCode",{parentName:"p"},"ECMAScript"),"中对象其实不是一组数据与功能的集合，使用",Object(s.b)("inlineCode",{parentName:"p"},"new Object()"),"来创建一个对象，当然在你就简单的创建一个",Object(s.b)("inlineCode",{parentName:"p"},"Object"),"类型的实例是没什么用了的，但是",Object(s.b)("inlineCode",{parentName:"p"},"Object"),"类型是所有它的实例的基础，",Object(s.b)("inlineCode",{parentName:"p"},"Object"),"类型所具有的属性与方法也存在具体的对象中的，比如",Object(s.b)("inlineCode",{parentName:"p"},"[],{}"),"等。\n可以这么理解，每一个",Object(s.b)("inlineCode",{parentName:"p"},"Object"),"类型的实例都具有",Object(s.b)("inlineCode",{parentName:"p"},"new Object()"),"的所有属性与方法。"),Object(s.b)("ol",null,Object(s.b)("li",{parentName:"ol",className:"__internal"},"constructor: 构造函数，也就是相同于与我们的",Object(s.b)("inlineCode",{parentName:"li"},"Object()"),",保存着用于创建当前对象的函数。"),Object(s.b)("li",{parentName:"ol",className:"__internal"},"hasOwnProperty(propertyName): 用于检查给定的属性在当前的对象实例中是否存在。"),Object(s.b)("li",{parentName:"ol",className:"__internal"},"isProtorypeOf(Object): 用于检查传入的对象是否是传入对象的原型。"),Object(s.b)("li",{parentName:"ol",className:"__internal"},"propertyIsEnumerable(propertyName): 用于检测给定的属性是否能够迭代。"),Object(s.b)("li",{parentName:"ol",className:"__internal"},"toLocaleString(): 返当前执行环境下对象的字符串表示。"),Object(s.b)("li",{parentName:"ol",className:"__internal"},"toString(): 返回对象的字符串表示。"),Object(s.b)("li",{parentName:"ol",className:"__internal"},"valueOf(): 返回对象的字符串、数值、布尔值表示。")),Object(s.b)("p",null,"我们常说的复杂引用数据类型",Object(s.b)("inlineCode",{parentName:"p"},"Object"),"类型常的有",Object(s.b)("inlineCode",{parentName:"p"},"Array,Object,Date,RegEXP,Function"),",为啥叫做引类型请看"),Object(s.b)("blockquote",null,Object(s.b)("div",{parentName:"blockquote",className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},Object(s.b)("span",{parentName:"code",className:"token keyword"},"var")," a ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"name",Object(s.b)("span",{parentName:"code",className:"token operator"},":")," ",Object(s.b)("span",{parentName:"code",className:"token string"},"'隔壁表哥'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," age",Object(s.b)("span",{parentName:"code",className:"token operator"},":")," ",Object(s.b)("span",{parentName:"code",className:"token string"},"'66'")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"var")," b ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," a",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\nb",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),"name ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token string"},"'不是表哥是老王'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\nconsole",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"log"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"a",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},'// {name: "不是表哥是老王", age: "66"}'))))),Object(s.b)("ol",null,Object(s.b)("li",{parentName:"ol",className:"__internal"},Object(s.b)("p",{parentName:"li"},"基本的",Object(s.b)("inlineCode",{parentName:"p"},"Object"),"类型\n简单的来看一下",Object(s.b)("inlineCode",{parentName:"p"},"Object"),"类型的，可以使用:"),Object(s.b)("div",{parentName:"li",className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},Object(s.b)("span",{parentName:"code",className:"token keyword"},"var")," obj1 ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(s.b)("span",{parentName:"code",className:"token class-name"},"Object"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"var")," obj2 ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(s.b)("span",{parentName:"code",className:"token class-name"},"Object"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 不推荐"),"\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"var")," obj3 ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")))),Object(s.b)("p",{parentName:"li"}," 补充我们访问变量里面的一个某一个属性的时候可以使用:"),Object(s.b)("div",{parentName:"li",className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},Object(s.b)("span",{parentName:"code",className:"token keyword"},"var")," person ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    name",Object(s.b)("span",{parentName:"code",className:"token operator"},":")," ",Object(s.b)("span",{parentName:"code",className:"token string"},"'隔壁表哥'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},","),"\n    age",Object(s.b)("span",{parentName:"code",className:"token operator"},":")," ",Object(s.b)("span",{parentName:"code",className:"token string"},"'66'"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\nperson",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),"name",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// '隔壁表哥'"),"\nperson",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token string"},"'name'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// '隔壁表哥'")))),Object(s.b)("p",{parentName:"li"}," 上面的两种形式用于访问对象属性的方法没有任何区别，但是方括号的形式可以能过变量的形式来访问属性。还可以避免一些物特殊的键值,当然，我们一般会推荐使用",Object(s.b)("inlineCode",{parentName:"p"},"."),"来获取。"),Object(s.b)("div",{parentName:"li",className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},Object(s.b)("span",{parentName:"code",className:"token keyword"},"var")," propertyName ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token string"},'"name"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\nperson",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),"propertyName",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// '隔壁表哥'"),"\nperson",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token string"},"'first_name'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token string"},"'小小'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\nperson",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token string"},"'second name'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token string"},"'小小小'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"))))),Object(s.b)("li",{parentName:"ol",className:"__internal"},Object(s.b)("p",{parentName:"li"},"Array"),Object(s.b)("p",{parentName:"li"},Object(s.b)("inlineCode",{parentName:"p"},"Array"),"是也是除",Object(s.b)("inlineCode",{parentName:"p"},"Object"),"之外，常用的复杂对象类型了，它可以存放任何类型的数据。"),Object(s.b)("div",{parentName:"li",className:"rcpress-highlight","data-language":"text"},Object(s.b)("pre",{parentName:"div",className:"language-text"},Object(s.b)("code",{parentName:"pre",className:"language-text"},"var arr1 = new Array();\nvar arr2 = [];"))),Object(s.b)("ul",{parentName:"li"},Object(s.b)("li",{parentName:"ul",className:"__internal"},Object(s.b)("p",{parentName:"li"},"数组的长度"),Object(s.b)("div",{parentName:"li",className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},Object(s.b)("span",{parentName:"code",className:"token keyword"},"var")," colors ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token string"},"'red'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},","),Object(s.b)("span",{parentName:"code",className:"token string"},"'yellow'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token string"},"'blue'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token string"},"'green'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"var")," names ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\ncolors",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),"length",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 4"),"\nnames",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),"length",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 0"),"\n\ncolors",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),"length ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"3"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\nconsole",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"log"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"colors",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// ['red','yellow', 'blue'];"),"\n\ncolors",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),"length ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"4"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\nconsole",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"log"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"colors",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// ['red','yellow', 'blue', ];"),"\nconsole",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"log"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"colors",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token number"},"3"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// undefined")))),Object(s.b)("p",{parentName:"li"},"通过这发现我们的",Object(s.b)("inlineCode",{parentName:"p"},"length"),"属性居然不是一个只读属性,是可以修改数组的。理论上数组可以存放",Object(s.b)("strong",{parentName:"p"},"4,294,967,295"),"个项。")),Object(s.b)("li",{parentName:"ul",className:"__internal"},Object(s.b)("p",{parentName:"li"},"检测数组"),Object(s.b)("p",{parentName:"li"},"常用检查检测是否为数组"),Object(s.b)("div",{parentName:"li",className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},"value ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"instanceof")," ",Object(s.b)("span",{parentName:"code",className:"token class-name"},"Array"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\nArray",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"isArray"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"value",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 这是ECMAScript5 为我们的提供的,当然为了做到兼容可以采用下面的方式"),"\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"if"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token keyword"},"typeof")," Array",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),"isArray",Object(s.b)("span",{parentName:"code",className:"token operator"},"==="),Object(s.b)("span",{parentName:"code",className:"token string"},'"undefined"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n   Array",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function-variable function"},"isArray")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"function"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token parameter"},"arg"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"return")," ",Object(s.b)("span",{parentName:"code",className:"token class-name"},"Object"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),"prototype",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"toString"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"call"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"arg",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"===")," ",Object(s.b)("span",{parentName:"code",className:"token string"},'"[object Array]"'),"\n   ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"))))),Object(s.b)("li",{parentName:"ul",className:"__internal"},Object(s.b)("p",{parentName:"li"},"转换方法\n前面我们有介绍我们",Object(s.b)("inlineCode",{parentName:"p"},"Object"),"实例当中有",Object(s.b)("inlineCode",{parentName:"p"},"toLocaleString()"),"、",Object(s.b)("inlineCode",{parentName:"p"},"toString()"),"、",Object(s.b)("inlineCode",{parentName:"p"},"valueOf()"),"这几个方法,以及数组的",Object(s.b)("inlineCode",{parentName:"p"},"join()")),Object(s.b)("div",{parentName:"li",className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},"  ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"var")," colors ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token string"},"'red'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},","),Object(s.b)("span",{parentName:"code",className:"token string"},"'yellow'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token string"},"'blue'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token string"},"'green'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n  colors",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"valueOf"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},'// ["red", "yellow", "blue", "green"] 返回的还是当前的数组'),"\n  colors",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"toString"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},'// "red,yellow,blue,green"'),"\n  返回数组每个值的字符串形式拼接而成的一个以逗号分割的字符串",Object(s.b)("span",{parentName:"code",className:"token punctuation"},","),"类似与调用了Array",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"join"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),"方法\n  colors",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"toLocaleString"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},'// "red,yellow,blue,green"'),"\n  colors",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"join"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},"','"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},'// "red,yellow,blue,green"'))))),Object(s.b)("li",{parentName:"ul",className:"__internal"},Object(s.b)("p",{parentName:"li"},"数组的增与删"),Object(s.b)("p",{parentName:"li"},Object(s.b)("inlineCode",{parentName:"p"},"ECMAScript"),"提供了二个操作末尾的方法",Object(s.b)("inlineCode",{parentName:"p"},"push()"),"和",Object(s.b)("inlineCode",{parentName:"p"},"pop()"),"，以及二个操作头部的方法",Object(s.b)("inlineCode",{parentName:"p"},"shift()"),"与",Object(s.b)("inlineCode",{parentName:"p"},"unshift()"),"，还有一个更灵活的方法",Object(s.b)("inlineCode",{parentName:"p"},"splice()"),"，上面的方法都会修改原来的数组。"),Object(s.b)("div",{parentName:"li",className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"}," ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"var")," colors ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token string"},"'red'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},","),Object(s.b)("span",{parentName:"code",className:"token string"},"'yellow'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token string"},"'blue'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n colors",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"push"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},"'green'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 4 push()返回当前的数组的长度"),"\n colors",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"pop"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 返回尾部删除项，并返回当前删除的项"),"\n\n colors",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"unshift"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},"'orange'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"//  返回当前数组的长度"),"\n colors",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"shift"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 删除头部第一项，并返回当前删除的项"),"\n\n colors",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"splice"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token number"},"0"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},","),Object(s.b)("span",{parentName:"code",className:"token number"},"1"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 要删除的第一项的位置和要删除项数 ,返回被删除的项目"),"\n colors",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"splice"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token number"},"0"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},","),Object(s.b)("span",{parentName:"code",className:"token number"},"0"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},","),Object(s.b)("span",{parentName:"code",className:"token string"},"'red'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},","),Object(s.b)("span",{parentName:"code",className:"token string"},"'orange'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"//批定第三个参数则表示在指定位置添加，注意我们的第二个参数为0，表示删除的项为0"),"\n console",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"log"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"colors",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},'// ["red", "orange", "yellow", "blue"]'),"\n colors",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"splice"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token number"},"0"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},","),Object(s.b)("span",{parentName:"code",className:"token number"},"1"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},","),Object(s.b)("span",{parentName:"code",className:"token string"},"'purple'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 表示又删新增加元素"),"\n console",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"log"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"colors",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},'// ["purple", "orange", "yellow", "blue"]'))))),Object(s.b)("li",{parentName:"ul",className:"__internal"},Object(s.b)("p",{parentName:"li"},"数组位置查找"),Object(s.b)("p",{parentName:"li"},"在",Object(s.b)("inlineCode",{parentName:"p"},"ECMAScript5"),"为我们提供了两个位置方法:",Object(s.b)("inlineCode",{parentName:"p"},"indexOf()"),"与",Object(s.b)("inlineCode",{parentName:"p"},"lastIndexOf()"),"，这两个方法都是用于查找元素的位置的，不过一个是从数组的头开始查找，一个是从数组的尾开始查找。它们都接收两个参数，一个表示查找项，和一个查找的位置。如果没有查找到则返回",Object(s.b)("inlineCode",{parentName:"p"},"-1")),Object(s.b)("div",{parentName:"li",className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},Object(s.b)("span",{parentName:"code",className:"token keyword"},"var")," numbers ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token number"},"1"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},","),Object(s.b)("span",{parentName:"code",className:"token number"},"2"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},","),Object(s.b)("span",{parentName:"code",className:"token number"},"3"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},","),Object(s.b)("span",{parentName:"code",className:"token number"},"4"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},","),Object(s.b)("span",{parentName:"code",className:"token number"},"5"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},","),Object(s.b)("span",{parentName:"code",className:"token number"},"6"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},","),Object(s.b)("span",{parentName:"code",className:"token number"},"7"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},","),Object(s.b)("span",{parentName:"code",className:"token number"},"8"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},","),Object(s.b)("span",{parentName:"code",className:"token number"},"9"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),"\nnumbers",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"indexOf"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token number"},"4"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 3"),"\nnumbers",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"lastIndexOf"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token number"},"4"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 5"),"\nnumbers",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"indexOf"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token number"},"4"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},","),Object(s.b)("span",{parentName:"code",className:"token number"},"4"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 5"),"\nnumbers",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"lastIndexOf"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token number"},"4"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},","),Object(s.b)("span",{parentName:"code",className:"token number"},"4"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 3"))))),Object(s.b)("li",{parentName:"ul",className:"__internal"},Object(s.b)("p",{parentName:"li"},"数组的迭代\n除了我们的",Object(s.b)("inlineCode",{parentName:"p"},"for循环"),",",Object(s.b)("inlineCode",{parentName:"p"},"for in"),",",Object(s.b)("inlineCode",{parentName:"p"},"for of"),"以外，我们的",Object(s.b)("inlineCode",{parentName:"p"},"ECMAScript"),"为我们提供了以下几个方法"),Object(s.b)("div",{parentName:"li",className:"rcpress-highlight","data-language":"text"},Object(s.b)("pre",{parentName:"div",className:"language-text"},Object(s.b)("code",{parentName:"pre",className:"language-text"},"- `every()`: 给定一个函数，对数组的每一项进行判断，每一项返回为`true`,则返回`true`;\n- `some()`: 给定一个函数，对数组的每一项进行判断，有一项返回为`true`,则返回`true`;\n- `filter()`: 给定一个函数，对数组的每一项进行判断，返回符合条件的，数组合集;\n- `map()`: 给定一个函数，对数组的每一项进行处理，返回处理之后的数组;\n- `forEach()`: 给定一个函数，对数组每一项进行处理，没有返回值;\n- `reduce()`: 给定一个函数，对数组每一项进行处理，返回处理之后的数组;\n- `reduceRight()`: 给定一个函数，对数组从最后一项开始进行处理，返回处理之后的数组;\n\n```js\nvar numbers = [1,2,3,4,5,4,3,2,1]\n\nvar everyNum = numbers.every((item,index,array)=>{\n    return item > 2\n})\nconsole.log(everyNum); // false\n\nvar someNum = numbers.some((item,index,array) => {\n    return item > 2\n})\nconsole.log(someNum); // true\n\nvar filterNum = numbers.filter((item,index,array)=>{\n    return item > 2\n})\nconsole.log(filterNum); // [3, 4, 5, 4, 3]\n\nvar mapNum = numbers.map((item,index,array)=>{\n    return item * 2\n})\nconsole.log(mapNum); // [2, 4, 6, 8, 10, 8, 6, 4, 2]\n\nnumbers.forEach((item,index,array)=>{\n    console.log(item);\n})\n\nvar sum1 = numbers.reduce((prev,cur,index,array)=>{ // prev,表示上一次执行的结果，cur当前项\n    return prev + cur\n})\nconsole.log(sum1); // 25\n\n var sum2 = numbers.reduceRight((prev,cur,index,array)=>{\n    return prev + cur\n})\nconsole.log(sum1); // 25\n```")))))),Object(s.b)("li",{parentName:"ol",className:"__internal"},Object(s.b)("p",{parentName:"li"},"Date"),Object(s.b)("p",{parentName:"li"},Object(s.b)("inlineCode",{parentName:"p"},"Date"),"这个类型的大家都常用到的过多的介绍我也不多说了，常用的工具类",Object(s.b)("a",{parentName:"p",href:"http://momentjs.cn/",target:"_blank"},Object(s.b)("inlineCode",{parentName:"a"},"moment")),",",Object(s.b)("a",{parentName:"p",href:"https://github.com/xx45/dayjs?utm_source=gold_browser_extension",target:"_blank"},Object(s.b)("inlineCode",{parentName:"a"},"dayjs")),",推荐大家使用这个两个这里我就不多说了，常用的查一下很简单也很方便。")),Object(s.b)("li",{parentName:"ol",className:"__internal"},Object(s.b)("p",{parentName:"li"},"RegExp"),Object(s.b)("p",{parentName:"li"},Object(s.b)("inlineCode",{parentName:"p"},"ECMAScript"),"能过",Object(s.b)("inlineCode",{parentName:"p"},"RegExp"),"类型来支持正则表达式。表达式如下:"),Object(s.b)("div",{parentName:"li",className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},Object(s.b)("span",{parentName:"code",className:"token keyword"},"var")," demo ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"/")," pattern ",Object(s.b)("span",{parentName:"code",className:"token operator"},"/")," flags",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")))),Object(s.b)("p",{parentName:"li"},Object(s.b)("inlineCode",{parentName:"p"},"pattern"),"这个表示我们的匹配模式，后面的",Object(s.b)("inlineCode",{parentName:"p"},"flags"),"表示标志，标识有:",Object(s.b)("inlineCode",{parentName:"p"},"全局模式(global) g"),",",Object(s.b)("inlineCode",{parentName:"p"},"不区分大小写模式(case-insensitive) i"),", ",Object(s.b)("inlineCode",{parentName:"p"},"多行模式(multiline) m"),"。\n同时也提供了",Object(s.b)("inlineCode",{parentName:"p"},"exec()"),"与",Object(s.b)("inlineCode",{parentName:"p"},"test()"),"，这两个方法，前一个返回匹配到的结果，后一个则表示是否匹配到了。")),Object(s.b)("li",{parentName:"ol",className:"__internal"},Object(s.b)("p",{parentName:"li"},"Function"),Object(s.b)("p",{parentName:"li"},Object(s.b)("inlineCode",{parentName:"p"},"Function"),"可能是",Object(s.b)("inlineCode",{parentName:"p"},"ECMAScript"),"当中最有意思的，首先我们要明确一点由于函数是对象所以函数名实际上是一个指向对象的指针，不会与某个函数绑定。同时要理解一下，函数声明与函数表达式,两着的区别就不得说到变量与函数的提升，",Object(s.b)("inlineCode",{parentName:"p"},"js"),"是一个弱类型的动态语言，在执行的",Object(s.b)("inlineCode",{parentName:"p"},"js"),"的时候，解析器会首先扫描所有变量与函数，并将它们提升到最顶部进行执行，关于这里的执行机制，可以在后面的讲解。"),Object(s.b)("div",{parentName:"li",className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},Object(s.b)("span",{parentName:"code",className:"token comment"},"// 函数声明"),"\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(s.b)("span",{parentName:"code",className:"token function"},"sum")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token parameter"},"num1 ",Object(s.b)("span",{parentName:"span",className:"token punctuation"},","),"num2"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"return")," sum1 ",Object(s.b)("span",{parentName:"code",className:"token operator"},"+")," sum2\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 函数表达式"),"\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"var")," ",Object(s.b)("span",{parentName:"code",className:"token function-variable function"},"sum")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"function"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token parameter"},"num1 ",Object(s.b)("span",{parentName:"span",className:"token punctuation"},",")," num2"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"return")," sum1 ",Object(s.b)("span",{parentName:"code",className:"token operator"},"+")," sum2\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}")))),Object(s.b)("p",{parentName:"li"},"关于两者的区别如下"),Object(s.b)("div",{parentName:"li",className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},"console",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"log"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token function"},"sum"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token number"},"10"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},","),Object(s.b)("span",{parentName:"code",className:"token number"},"10"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 20"),"\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(s.b)("span",{parentName:"code",className:"token function"},"sum"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token parameter"},"sum1",Object(s.b)("span",{parentName:"span",className:"token punctuation"},","),"sum2"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"return")," sum1 ",Object(s.b)("span",{parentName:"code",className:"token operator"},"+")," sum2\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\nconsole",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"log"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token function"},"sum1"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token number"},"10"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},","),Object(s.b)("span",{parentName:"code",className:"token number"},"10"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// error"),"\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"var")," ",Object(s.b)("span",{parentName:"code",className:"token function-variable function"},"sum1")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(s.b)("span",{parentName:"code",className:"token function"},"sum"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token parameter"},"sum1",Object(s.b)("span",{parentName:"span",className:"token punctuation"},","),"sum2"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"return")," sum1 ",Object(s.b)("span",{parentName:"code",className:"token operator"},"+")," sum2\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}")))),Object(s.b)("p",{parentName:"li"},"补充一点，当使用别人的写的函数方法时，不知道需要传递多少个参数，可以使用",Object(s.b)("inlineCode",{parentName:"p"},"functionName.length"),",可以得该函数所能接收的参数。首先关于函数的参数名并不是一定必须的,因为在函数内部默认存在一个",Object(s.b)("inlineCode",{parentName:"p"},"arguments"),"的数组用 于接收函数所接收到的全部参数。")),Object(s.b)("li",{parentName:"ol",className:"__internal"},Object(s.b)("p",{parentName:"li"},"基本简单类型的包装"),Object(s.b)("p",{parentName:"li"},"前面介绍过，我们的简单数据类型并不是对象，但是",Object(s.b)("inlineCode",{parentName:"p"},"ECMAScript"),"提供了特殊的引用类型，也就是基本包装类型",Object(s.b)("inlineCode",{parentName:"p"},"Number,String,Boolean"),"，我们来看看下面的:"),Object(s.b)("div",{parentName:"li",className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},Object(s.b)("span",{parentName:"code",className:"token keyword"},"var")," str1 ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token string"},"'long string'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"var")," str2 ",Object(s.b)("span",{parentName:"code",className:"token operator"},"="),"  str1",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"indexOf"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"s",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")))),Object(s.b)("p",{parentName:"li"},"我们知道基本数据类型不是对象，所以也就不存在方法了。但是",Object(s.b)("inlineCode",{parentName:"p"},"String, Number, Boolean"),"类型的数据都有自己的操作方法，我们要来说一下整个类型包装的过程。"),Object(s.b)("div",{parentName:"li",className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},Object(s.b)("span",{parentName:"code",className:"token keyword"},"var")," str1 ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(s.b)("span",{parentName:"code",className:"token class-name"},"String"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},"'long string'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 第一步 创建对象"),"\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"var")," str2 ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," str",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"indexOf"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"s",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 第二步 使用对象的属性或是方法"),"\nstr1 ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"null"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 第三步 销毁对象")))),Object(s.b)("p",{parentName:"li"}," ",Object(s.b)("inlineCode",{parentName:"p"},"Object"),"类型与基本包装类型主要区别是在于生存周期的问题，这个就可以解释上面的所提到的",Object(s.b)("inlineCode",{parentName:"p"},"colors"),"的问题。"),Object(s.b)("div",{parentName:"li",className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},Object(s.b)("span",{parentName:"code",className:"token keyword"},"var")," num ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token string"},"'255'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"var")," number ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token function"},"Number"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"num",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"typeof")," number",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},'// "number"'),"\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"var")," numberObj ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(s.b)("span",{parentName:"code",className:"token class-name"},"Number"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"num",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"typeof")," numberObj",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 'object'"),"\n\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"var")," falseObj ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(s.b)("span",{parentName:"code",className:"token class-name"},"Boolean"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token boolean"},"false"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\nconsole",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"log"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"falseObj ",Object(s.b)("span",{parentName:"code",className:"token operator"},"&&")," ",Object(s.b)("span",{parentName:"code",className:"token boolean"},"true"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// true"),"\n\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"var")," falseS ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token boolean"},"false"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\nconsole",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"log"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"falseS ",Object(s.b)("span",{parentName:"code",className:"token operator"},"&&")," ",Object(s.b)("span",{parentName:"code",className:"token boolean"},"true"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// false")))),Object(s.b)("p",{parentName:"li"}," 补充说明关于",Object(s.b)("inlineCode",{parentName:"p"},"substr"),",",Object(s.b)("inlineCode",{parentName:"p"},"substring"),",",Object(s.b)("inlineCode",{parentName:"p"},"slice"),"一个简单区别"),Object(s.b)("div",{parentName:"li",className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},Object(s.b)("span",{parentName:"code",className:"token keyword"},"var")," str ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token string"},"'hello world'"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n\nstr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"slice"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token number"},"3"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// lo world"),"\nstr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"substring"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token number"},"3"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// lo world"),"\nstr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"substr"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token number"},"3"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// lo world"),"\n\nstr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"slice"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token number"},"3"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},","),Object(s.b)("span",{parentName:"code",className:"token number"},"5"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// lo"),"\nstr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"substring"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token number"},"3"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},","),Object(s.b)("span",{parentName:"code",className:"token number"},"5"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// lo"),"\nstr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"substr"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token number"},"3"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},","),Object(s.b)("span",{parentName:"code",className:"token number"},"5"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// lo wo"),"\n\nstr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"slice"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token operator"},"-"),Object(s.b)("span",{parentName:"code",className:"token number"},"3"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// rld;"),"\nstr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"substring"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token operator"},"-"),Object(s.b)("span",{parentName:"code",className:"token number"},"3"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// hello word"),"\nstr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"substr"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token operator"},"-"),Object(s.b)("span",{parentName:"code",className:"token number"},"3"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// rld"),"\n\nstr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"slice"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token number"},"3"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"-"),Object(s.b)("span",{parentName:"code",className:"token number"},"3"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// lo wo"),"\nstr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"substring"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token number"},"3"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},","),Object(s.b)("span",{parentName:"code",className:"token operator"},"-"),Object(s.b)("span",{parentName:"code",className:"token number"},"3"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// hel"),"\nstr",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"substr"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token number"},"3"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},","),Object(s.b)("span",{parentName:"code",className:"token operator"},"-"),Object(s.b)("span",{parentName:"code",className:"token number"},"3"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token comment"},"// ''")))),Object(s.b)("p",{parentName:"li"}," 首先这三个方法都不会修改字符串本身。"),Object(s.b)("div",{parentName:"li",className:"rcpress-highlight","data-language":"text"},Object(s.b)("pre",{parentName:"div",className:"language-text"},Object(s.b)("code",{parentName:"pre",className:"language-text"}," 1. 在指定同一个参数`3`的时候返回的结果一致。\n\n 2. 在指定两个参数`3和5`时，`slice()`与`substring()`返回结果相同，\n 从第3个到第5个，但是`substr`返回的结果就不一样了，\n 因为`substr`接收的第二参数表示在返回的字符的个数。\n\n 3. 传递一个负数参数`-3`时`slice()`会与当前的字符长度相加\n `slice(-3)`等价于`slice(11 + (-3))`,\n `substr()`方法与`slice()`相似,`substr(-3)`等价于`substr((11 + (-3)), 0)`,\n 而`substring()`则会把所的负数转为`0`,`substring(-3)`等价于`substring(0)`。\n\n 4. 传递第二个参数为负数时`3,-3`,\n `slice(3, -3)`等价于`slice(3, 11 + ( - 3))`,\n `substring(3, -3)`等价于`substring(3,0)`,\n `substr(3,-3)`等价于`substr(3,0)`"))))),Object(s.b)("h2",{className:"__internal",id:"思考"},"思考",Object(s.b)("a",{parentName:"h2",href:"#%E6%80%9D%E8%80%83","aria-hidden":!0,className:"anchor"},"#")),Object(s.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},Object(s.b)("span",{parentName:"code",className:"token number"},"NaN")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"<")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"3"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// false"),"\n",Object(s.b)("span",{parentName:"code",className:"token number"},"NaN")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},">=")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"3"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// false"),"\n",Object(s.b)("span",{parentName:"code",className:"token number"},"NaN")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"==")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"NaN"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"  ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// false"),"\n",Object(s.b)("span",{parentName:"code",className:"token string"},'"Blue"')," ",Object(s.b)("span",{parentName:"code",className:"token operator"},">")," ",Object(s.b)("span",{parentName:"code",className:"token string"},'"Apple"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// true"),"\n",Object(s.b)("span",{parentName:"code",className:"token string"},'"Blue"')," ",Object(s.b)("span",{parentName:"code",className:"token operator"},">")," ",Object(s.b)("span",{parentName:"code",className:"token string"},'"apple"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// false"),"\n",Object(s.b)("span",{parentName:"code",className:"token number"},"0")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"==")," ",Object(s.b)("span",{parentName:"code",className:"token boolean"},"true"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// false"),"\n",Object(s.b)("span",{parentName:"code",className:"token number"},"1")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"==")," ",Object(s.b)("span",{parentName:"code",className:"token boolean"},"true"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// true"),"\n",Object(s.b)("span",{parentName:"code",className:"token number"},"2")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"==")," ",Object(s.b)("span",{parentName:"code",className:"token boolean"},"true"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"   ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// false"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"==")," ",Object(s.b)("span",{parentName:"code",className:"token boolean"},"false"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// true"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"==")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"!"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"   ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// true"),"\n",Object(s.b)("span",{parentName:"code",className:"token number"},"0.3")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"+")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0.6")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"==")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0.9"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// false[] == ''   // -> true"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"==")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0"),"    ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// -> true"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token string"},"''"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"==")," ",Object(s.b)("span",{parentName:"code",className:"token string"},"''")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// -> true"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token number"},"0"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"==")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0"),"   ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// -> true"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token number"},"0"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"==")," ",Object(s.b)("span",{parentName:"code",className:"token string"},"''"),"  ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// -> false"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token string"},"''"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"==")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0"),"  ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// -> true"),"\n\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token keyword"},"null"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"==")," ",Object(s.b)("span",{parentName:"code",className:"token string"},"''"),"      ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// true"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token keyword"},"null"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"==")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0"),"       ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// true"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token keyword"},"undefined"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"==")," ",Object(s.b)("span",{parentName:"code",className:"token string"},"''")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// true"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token keyword"},"undefined"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"==")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0"),"  ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// true"),"\n\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"==")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0"),"  ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// true"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"==")," ",Object(s.b)("span",{parentName:"code",className:"token string"},"''")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// true"),"\n\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"==")," ",Object(s.b)("span",{parentName:"code",className:"token string"},"''")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// true"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"==")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0"),"  ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// true"),"\n\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"[")," ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"null")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"==")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0"),"  ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// true"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"[")," ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"null")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"==")," ",Object(s.b)("span",{parentName:"code",className:"token string"},"''")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// true"),"\n\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"[")," ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"undefined")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"==")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"0"),"  ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// true"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"[")," ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"undefined")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"==")," ",Object(s.b)("span",{parentName:"code",className:"token string"},"''")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// trueNumber(); // -> 0"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"Number"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token keyword"},"undefined"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// -> NaN"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"Number"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 0"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"parseInt"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},'"f*ck"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// -> NaN"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"parseInt"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},'"f*ck"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"16"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// -> 15 这是因为 parseInt 会持续通过解析直到它解析到一个不识别的字符，'f*ck' 中的 f 是 16 进制下的 15"),"\n",Object(s.b)("span",{parentName:"code",className:"token comment"},"//"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"parseInt"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},'"Infinity"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"10"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// -> NaN"),"\n",Object(s.b)("span",{parentName:"code",className:"token comment"},"// ..."),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"parseInt"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},'"Infinity"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"18"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// -> NaN..."),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"parseInt"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},'"Infinity"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"19"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// -> 18"),"\n",Object(s.b)("span",{parentName:"code",className:"token comment"},"// ..."),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"parseInt"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},'"Infinity"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"23"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// -> 18..."),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"parseInt"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},'"Infinity"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"24"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// -> 151176378"),"\n",Object(s.b)("span",{parentName:"code",className:"token comment"},"// ..."),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"parseInt"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},'"Infinity"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"29"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// -> 385849803"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"parseInt"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},'"Infinity"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"30"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// -> 13693557269"),"\n",Object(s.b)("span",{parentName:"code",className:"token comment"},"// ..."),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"parseInt"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},'"Infinity"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"34"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// -> 28872273981"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"parseInt"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},'"Infinity"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"35"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// -> 1201203301724"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"parseInt"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},'"Infinity"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"36"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// -> 1461559270678..."),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"parseInt"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},'"Infinity"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"37"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// -> NaN"),"\n",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 它将 null 转换成字符串 'null' ，并尝试转换它。 对于基数 0 到 23，没有可以转换的数字，因此返回 NaN。 在 24，“n” ，第 14 个字母被添加到数字系统。 在 31，“u” ，添加第 21 个字母，可以解码整个字符串。 在 37 处，不再有可以生成的有效数字集，并返回 NaN 。"),"\n\n",Object(s.b)("span",{parentName:"code",className:"token function"},"parseInt"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token keyword"},"null"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"24"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// -> 23"),"\n",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 八进制"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"parseInt"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},'"06"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 6"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"parseInt"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},'"08"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 8 如果支持 ECMAScript 5"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"parseInt"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},'"08"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 0 如果不支持 ECMAScript 5"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"parseInt"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{")," ",Object(s.b)("span",{parentName:"code",className:"token function-variable function"},"toString"),Object(s.b)("span",{parentName:"code",className:"token operator"},":")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=>")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"2"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token function-variable function"},"valueOf"),Object(s.b)("span",{parentName:"code",className:"token operator"},":")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=>")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"1")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// -> 2"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"Number"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{")," ",Object(s.b)("span",{parentName:"code",className:"token function-variable function"},"toString"),Object(s.b)("span",{parentName:"code",className:"token operator"},":")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=>")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"2"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token function-variable function"},"valueOf"),Object(s.b)("span",{parentName:"code",className:"token operator"},":")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=>")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"1")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// -> 1"),"\n",Object(s.b)("span",{parentName:"code",className:"token comment"},'// ParseInt 接受字符串参数并返回一个指定基数下的证书。ParseInt 也去除第一个字符串中非数字字符（字符集由基数决定）后的内容。0.000001 被转换为 "0.000001" 而 parseInt 返回 0。当 0.0000001 被转换为字符串时它被处理为 "1e-7" 因此 parseInt 返回 1。1/1999999 被转换为 5.00000250000125e-7 而 parseInt 返回 5。'),"\n\n",Object(s.b)("span",{parentName:"code",className:"token function"},"parseInt"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token number"},"0.000001"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// -> 0"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"parseInt"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token number"},"0.0000001"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// -> 1"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"parseInt"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token number"},"1")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"/")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"1999999"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// -> 5"),"\n\n ",Object(s.b)("span",{parentName:"code",className:"token number"},"3"),"  ",Object(s.b)("span",{parentName:"code",className:"token operator"},"-")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"1"),"  ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// -> 2"),"\n ",Object(s.b)("span",{parentName:"code",className:"token number"},"3"),"  ",Object(s.b)("span",{parentName:"code",className:"token operator"},"+")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"1"),"  ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// -> 4"),"\n",Object(s.b)("span",{parentName:"code",className:"token string"},"'3'")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"-")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"1"),"  ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// -> 2"),"\n",Object(s.b)("span",{parentName:"code",className:"token string"},"'3'")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"+")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"1"),"  ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// -> '31'"),"\n\n",Object(s.b)("span",{parentName:"code",className:"token string"},"''")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"+")," ",Object(s.b)("span",{parentName:"code",className:"token string"},"''")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// -> ''"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"+")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// -> ''"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"+")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// -> 0"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"+")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// -> '[object Object]'"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"+")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// -> '[object Object][object Object]'"),"\n\n",Object(s.b)("span",{parentName:"code",className:"token string"},"'222'")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"-")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"-"),Object(s.b)("span",{parentName:"code",className:"token string"},"'111'")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// -> 333"),"\n\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token number"},"4"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"*")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token number"},"4"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),"       ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// -> 16"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"*")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]"),"         ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// -> 0"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token number"},"4"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"4"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"*")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"["),Object(s.b)("span",{parentName:"code",className:"token number"},"4"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"4"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// NaN"),"\n\n",Object(s.b)("span",{parentName:"code",className:"token comment"},"// 关于字符串"),"\n",Object(s.b)("span",{parentName:"code",className:"token string"},'"str"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// -> 'str'"),"\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"typeof")," ",Object(s.b)("span",{parentName:"code",className:"token string"},'"str"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// -> 'string'"),"\n",Object(s.b)("span",{parentName:"code",className:"token string"},'"str"')," ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"instanceof")," ",Object(s.b)("span",{parentName:"code",className:"token class-name"},"String"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// -> false"),"\n\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"typeof")," ",Object(s.b)("span",{parentName:"code",className:"token function"},"String"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},'"str"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// -> 'string'"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"String"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},'"str"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// -> 'str'"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"String"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},'"str"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"==")," ",Object(s.b)("span",{parentName:"code",className:"token string"},'"str"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// -> true"),"\n\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(s.b)("span",{parentName:"code",className:"token class-name"},"String"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},'"str"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"==")," ",Object(s.b)("span",{parentName:"code",className:"token string"},'"str"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// -> true"),"\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"typeof")," ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(s.b)("span",{parentName:"code",className:"token class-name"},"String"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},'"str"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// -> 'object'"),"\n\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(s.b)("span",{parentName:"code",className:"token class-name"},"String"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},'"str"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(s.b)("span",{parentName:"code",className:"token comment"},"// -> [String: 'str']"),"\n\n"))),Object(s.b)("blockquote",null,Object(s.b)("p",{parentName:"blockquote"},"一个是",Object(s.b)("inlineCode",{parentName:"p"},"number"),"另外一个是",Object(s.b)("inlineCode",{parentName:"p"},"string"),"比较时时，会尝试将",Object(s.b)("inlineCode",{parentName:"p"},"string"),"转换为",Object(s.b)("inlineCode",{parentName:"p"},"number"),",尝试将",Object(s.b)("inlineCode",{parentName:"p"},"boolean"),"转换为",Object(s.b)("inlineCode",{parentName:"p"},"number"),"，",Object(s.b)("inlineCode",{parentName:"p"},"0或1"),"。",Object(s.b)("inlineCode",{parentName:"p"},"Object"),"类型比较时会将",Object(s.b)("inlineCode",{parentName:"p"},"Object"),"转换成",Object(s.b)("inlineCode",{parentName:"p"},"number"),"或",Object(s.b)("inlineCode",{parentName:"p"},"string"),"，取决于另外一个对比量的类型")))}d.isMDXComponent=!0,d=Object(c.hot)(e)(d),(b="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default:void 0)&&(b.register(r,"makeShortcode","E:\\h-project\\my-blog\\docs\\notes\\2021-07-02.md"),b.register(l,"Footer","E:\\h-project\\my-blog\\docs\\notes\\2021-07-02.md"),b.register(u,"layoutProps","E:\\h-project\\my-blog\\docs\\notes\\2021-07-02.md"),b.register("wrapper","MDXLayout","E:\\h-project\\my-blog\\docs\\notes\\2021-07-02.md"),b.register(d,"MDXContent","E:\\h-project\\my-blog\\docs\\notes\\2021-07-02.md")),(N="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.leaveModule:void 0)&&N(e)}.call(this,n(3)(e))}}]);