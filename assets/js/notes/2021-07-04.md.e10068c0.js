(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{328:function(e,a,n){"use strict";n.r(a),function(e){n.d(a,"default",(function(){return j}));var t,c=n(107),s=(n(305),n(0),n(108)),o=["components"];function p(){return(p=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var n=arguments[a];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])}return e}).apply(this,arguments)}function b(e,a){if(null==e)return{};var n,t,c=function(e,a){if(null==e)return{};var n,t,c={},s=Object.keys(e);for(t=0;t<s.length;t++)n=s[t],a.indexOf(n)>=0||(c[n]=e[n]);return c}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)n=s[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(c[n]=e[n])}return c}(t="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.enterModule:void 0)&&t(e);"undefined"!=typeof reactHotLoaderGlobal&&reactHotLoaderGlobal.default.signature;var m,N,r=function(e){return function(a){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(s.b)("div",a)}},u=r("Footer"),l=r("ImageWrap"),d={};function j(e){var a=e.components,n=b(e,o);return Object(s.b)("wrapper",p({},d,n,{components:a,mdxType:"MDXLayout"}),Object(s.b)("blockquote",null,Object(s.b)(u,{mdxType:"Footer"})),Object(s.b)("h1",{className:"__internal",id:"11不得不说的闭包"},"11.不得不说的闭包",Object(s.b)("a",{parentName:"h1",href:"#11%E4%B8%8D%E5%BE%97%E4%B8%8D%E8%AF%B4%E7%9A%84%E9%97%AD%E5%8C%85","aria-hidden":!0,className:"anchor"},"#")),Object(s.b)("blockquote",null,Object(s.b)("p",{parentName:"blockquote"},"啥也不说先从下面这个例子看起")),Object(s.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," bb ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token parameter"},"a"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"return")," ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token parameter"},"b"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"return")," a ",Object(s.b)("span",{parentName:"code",className:"token operator"},"+")," b",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"\n    ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token parameter"},"a",Object(s.b)("span",{parentName:"span",className:"token punctuation"},",")," b"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"return")," a ",Object(s.b)("span",{parentName:"code",className:"token operator"},"*")," b",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token number"},"1"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token number"},"2"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n",Object(s.b)("span",{parentName:"code",className:"token function"},"bb"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token number"},"3"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n"))),Object(s.b)("p",null,"我们先跳过上面，请看下面的代码，并在 Chrome 控制台中调试运行一下，我们可以看到如下"),Object(s.b)(l,{title:"scopes",src:"/images/closure.png",mdxType:"ImageWrap"}),Object(s.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},"\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(s.b)("span",{parentName:"code",className:"token function"},"createClosure"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"const")," foo ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token string"},'"我是闭包"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n  ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"return")," ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n      ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"debugger"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n      console",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"log"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"foo",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n      ",Object(s.b)("span",{parentName:"code",className:"token function"},"eval"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},'"2+2"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),"\n      ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"debugger"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n      ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"return")," foo",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"let")," c ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token function"},"createClosure"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"debugger"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"c"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n"))),Object(s.b)("p",null,"闭包是在返回一个引用了外部作用域变量的函数的时候，为了把环境保存下来，创建的一个快照，并且对作用域链做了",Object(s.b)("inlineCode",{parentName:"p"},"tree shaking"),"，只留下必要的闭包链，保存在堆里，作为对象的 [","[scopes]","] 属性。因为此时还没执行函数，所以要静态分析标识符引用，确定用到了那些变量，打包保存下来。"),Object(s.b)("h2",{className:"__internal",id:"1作用域链"},"1.作用域链",Object(s.b)("a",{parentName:"h2",href:"#1%E4%BD%9C%E7%94%A8%E5%9F%9F%E9%93%BE","aria-hidden":!0,className:"anchor"},"#")),Object(s.b)("blockquote",null,Object(s.b)("p",{parentName:"blockquote"},"在 JavaScript 里面，函数、块都有自己的作用域，他们之间可以相互嵌套，作用域之间会形成引用关系，这条链叫做作用域链。")),Object(s.b)("h3",{className:"__internal",id:"12-静态作用域链"},"1.2 静态作用域链",Object(s.b)("a",{parentName:"h3",href:"#12-%E9%9D%99%E6%80%81%E4%BD%9C%E7%94%A8%E5%9F%9F%E9%93%BE","aria-hidden":!0,className:"anchor"},"#")),Object(s.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},Object(s.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(s.b)("span",{parentName:"code",className:"token function"},"fun1"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(s.b)("span",{parentName:"code",className:"token constant"},"A")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token string"},'"A"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(s.b)("span",{parentName:"code",className:"token function"},"fun2"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(s.b)("span",{parentName:"code",className:"token constant"},"B")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token string"},'"B"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n            ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(s.b)("span",{parentName:"code",className:"token function"},"func3"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n                ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(s.b)("span",{parentName:"code",className:"token constant"},"C")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token string"},'"C"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n            ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(s.b)("span",{parentName:"code",className:"token function"},"func4"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n            ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(s.b)("span",{parentName:"code",className:"token constant"},"D")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token string"},'"D"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}")))),Object(s.b)("p",null,"上面代码，我们可以看到了A,B,C,D三个变量,有fun1,fun2,fun3,fun4个函数，还一个块,关于他们之间的作用域链可以用",Object(s.b)("inlineCode",{parentName:"p"},"babel"),"转一下可以看到"),Object(s.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},Object(s.b)("span",{parentName:"code",className:"token comment"},"// test.js"),"\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"const")," parser ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token function"},"require"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},'"@babel/parser"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"const")," traverse ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token function"},"require"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},'"@babel/traverse"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),"default",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"const")," code ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token template-string"},Object(s.b)("span",{parentName:"span",className:"token template-punctuation string"},"`"),Object(s.b)("span",{parentName:"span",className:"token string"},'\nfunction fun1() {\n  const A = "A";\n  function fun2() {\n      const B = "B";\n      {\n          function func3() {\n              const C = "C";\n          }\n      }\n      function func4() {\n          const D = "D";\n      }\n  }\n}\n'),Object(s.b)("span",{parentName:"span",className:"token template-punctuation string"},"`")),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"const")," ast ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," parser",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"parse"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"code",Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n",Object(s.b)("span",{parentName:"code",className:"token function"},"traverse"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"ast",Object(s.b)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token function"},"FunctionDeclaration"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token parameter"},"path"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"path",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"get"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token string"},'"id.name"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),"node ",Object(s.b)("span",{parentName:"code",className:"token operator"},"===")," ",Object(s.b)("span",{parentName:"code",className:"token string"},'"func3"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n            console",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"log"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),"path",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),"scope",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"dump"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n"))),Object(s.b)("p",null,"babel结果如下(",Object(s.b)("inlineCode",{parentName:"p"},"FunctionDeclaration"),"函数是一个回调函数)"),Object(s.b)(l,{title:"babel结果",src:"/images/closure-babel.png",mdxType:"ImageWrap"}),Object(s.b)("p",null,"函数和块的作用域内的变量声明会在作用域 ",Object(s.b)("strong",{parentName:"p"},"（scope）")," 内创建一个绑定（变量名绑定到具体的值），然后其余地方可以引用这个绑定，这样就是静态作用域链的变量访问顺序。\n因为这样的嵌套关系是分析代码就可以得出的，不需要运行，按照这种顺序访问变量的链就是静态作用域链，这种链的好处是可以直观的知道变量之间的引用关系。静态作用域链是可以做静态分析的，比如我们刚刚用 babel 分析的 scope 链就是。"),Object(s.b)("h3",{className:"__internal",id:"13-动态作用域链"},"1.3 动态作用域链",Object(s.b)("a",{parentName:"h3",href:"#13-%E5%8A%A8%E6%80%81%E4%BD%9C%E7%94%A8%E5%9F%9F%E9%93%BE","aria-hidden":!0,className:"anchor"},"#")),Object(s.b)("p",null,"还有动态作用域链，也就是作用域的引用关系与嵌套关系无关，与执行顺序有关，会在执行的时候动态创建不同函数、块的作用域的引用关系。缺点就是不直观，没法静态分析。"),Object(s.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},Object(s.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(s.b)("span",{parentName:"code",className:"token function"},"func"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(s.b)("span",{parentName:"code",className:"token constant"},"A")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token string"},'"闭包函数"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"return")," ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"function"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    console",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"log"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token constant"},"A"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"const")," f2 ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token function"},"func"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n"))),Object(s.b)("p",null,"这就导致了一个问题，本来按照顺序创建调用一层层函数，按顺序创建和销毁作用域挺好的，但是如果内层函数返回了或者通过别的暴露出去了，那么外层函数销毁，内层函数却没有销毁，这时候怎么处理作用域，父作用域销不销毁？（比如这里的 ",Object(s.b)("inlineCode",{parentName:"p"},"func")," 调用结束要不要销毁作用域）\n我们拿上面的例子来举例"),Object(s.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},Object(s.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(s.b)("span",{parentName:"code",className:"token function"},"fun1"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(s.b)("span",{parentName:"code",className:"token constant"},"A")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token string"},'"A"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(s.b)("span",{parentName:"code",className:"token function"},"fun2"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(s.b)("span",{parentName:"code",className:"token constant"},"B")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token string"},'"B"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(s.b)("span",{parentName:"code",className:"token function"},"fun3"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n            ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(s.b)("span",{parentName:"code",className:"token constant"},"C")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token string"},'"C"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"return")," fun3",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"return")," fun2",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"const")," fun5 ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token function"},"fun1"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")))),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"首先，父作用域要不要销毁？是不是父作用域不销毁就行了？")),Object(s.b)("p",null,"不行的，父作用域中有很多东西与子函数无关，为啥因为子函数没结束就一直常驻内存。这样肯定有性能问题，所以还是要销毁。但是销毁了父作用域不能影响子函数，所以要再创建个对象，要把子函数内引用（refer）的父作用域的变量打包里来，给子函数打包带走。"),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"怎么让子函数打包带走？")),Object(s.b)("p",null,"设计个独特的属性，比如 [","[Scopes]","] ，用这个来放函数打包带走的用到的环境。并且这个属性得是一个栈，因为函数有子函数、子函数可能还有子函数，每次打包都要放在这里一个包，所以就要设计成一个栈结构，就像饭盒有多层一样。"),Object(s.b)("p",null,"我们所考虑的这个解决方案：销毁父作用域后，把用到的变量包起来，打包给子函数，放到一个属性上。这就是闭包的机制。"),Object(s.b)("div",{className:"rcpress-highlight","data-language":"js"},Object(s.b)("pre",{parentName:"div",className:"language-js"},Object(s.b)("code",{parentName:"pre",className:"language-js"},Object(s.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(s.b)("span",{parentName:"code",className:"token function"},"fun1"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(s.b)("span",{parentName:"code",className:"token constant"},"A")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token string"},'"A"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"debugger"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(s.b)("span",{parentName:"code",className:"token function"},"fun2"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(s.b)("span",{parentName:"code",className:"token constant"},"B")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token string"},'"B"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n        console",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"log"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token constant"},"A"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n        console",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"log"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token constant"},"B"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"debugger"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n        ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(s.b)("span",{parentName:"code",className:"token function"},"fun3"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"{"),"\n            ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(s.b)("span",{parentName:"code",className:"token constant"},"C")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token string"},'"C"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n            ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(s.b)("span",{parentName:"code",className:"token constant"},"B")," ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token string"},'"B"'),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n            console",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"log"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token constant"},"A"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n            console",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"log"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token constant"},"B"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n            console",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.b)("span",{parentName:"code",className:"token function"},"log"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token constant"},"C"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n            ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"debugger"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n        ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"return")," fun3",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n    ",Object(s.b)("span",{parentName:"code",className:"token keyword"},"return")," fun2",Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(s.b)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"const")," fun5 ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token function"},"fun1"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(s.b)("span",{parentName:"code",className:"token keyword"},"const")," fun6 ",Object(s.b)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.b)("span",{parentName:"code",className:"token function"},"fun5"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(s.b)("span",{parentName:"code",className:"token function"},"fun6"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.b)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.b)("span",{parentName:"code",className:"token punctuation"},";")))),Object(s.b)(l,{title:"scopes",src:"/images/closure-babel-1.png",mdxType:"ImageWrap"}),Object(s.b)("p",null,"我们需要打包的只是环境内没有的，也就是",Object(s.b)("strong",{parentName:"p"},"闭包只保存外部引用。"),"然后是在创建函数的时候保存到函数属性上的，创建的函数返回的时候会打包给函数，但是 JS 引擎怎么知道它要用到哪些外部引用呢，需要做 AST 扫描，很多 JS 引擎会做 Lazy Parsing，这时候去 parse 函数，正好也能知道它用到了哪些外部引用，然后把这些外部用打包成 Closure 闭包，加到 [","[scopes]","] 中。所以，闭包是返回函数的时候扫描函数内的标识符引用，把用到的本作用域的变量打成 Closure 包，放到 [","[Scopes]","] 里。"),Object(s.b)("p",null,"闭包是为了解决子函数晚于父函数销毁的问题，我们会在父函数销毁时，把子函数引用到的变量达成 Closure 包放到函数的 [","[Scopes]","] 上，让它计算父函数销毁了也随时随地能访问外部环境。\n但是问题有时候就出在了[","[Scopes]","]上面,我们知道 JavaScript 引擎会把内存分为函数调用栈、全局作用域和堆，其中堆用于放一些动态的对象，调用栈每一个栈帧放一个函数的执行上下文，里面有一个 local 变量环境用于放内部声明的一些变量，如果是对象，会在堆上分配空间，然后把引用保存在栈帧的 local 环境中。全局作用域也是一样，只不过一般用于放静态的一些东西，有时候也叫静态域。"),Object(s.b)("p",null,"父函数销毁，栈帧对应的内存马上释放，用到的 A B 会被 gc 回收，而返回的函数会把作用域链过滤出用到的引用形成闭包链放在堆中。这就导致了一个隐患：本来作用域是随着函数调用的结束而销毁的，因为整个栈帧都会被马上销毁。而形成闭包以后，转移到了堆内存。当运行这个子函数的时候，子函数会创建栈帧，如果这个函数一直在运行，那么它在堆内存中的闭包就一直占用着内存，就会使可用内存减少，严重到一定程度就算是内存泄漏了。所以闭包不要乱用，少打包一点东西到堆内存。"))}j.isMDXComponent=!0,j=Object(c.hot)(e)(j),(m="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default:void 0)&&(m.register(r,"makeShortcode","E:\\h-project\\my-blog\\docs\\notes\\2021-07-04.md"),m.register(u,"Footer","E:\\h-project\\my-blog\\docs\\notes\\2021-07-04.md"),m.register(l,"ImageWrap","E:\\h-project\\my-blog\\docs\\notes\\2021-07-04.md"),m.register(d,"layoutProps","E:\\h-project\\my-blog\\docs\\notes\\2021-07-04.md"),m.register("wrapper","MDXLayout","E:\\h-project\\my-blog\\docs\\notes\\2021-07-04.md"),m.register(j,"MDXContent","E:\\h-project\\my-blog\\docs\\notes\\2021-07-04.md")),(N="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.leaveModule:void 0)&&N(e)}.call(this,n(4)(e))}}]);